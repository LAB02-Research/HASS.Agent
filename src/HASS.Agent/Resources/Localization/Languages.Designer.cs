//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HASS.Agent.Resources.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Languages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Languages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HASS.Agent.Resources.Localization.Languages", typeof(Languages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;close.
        /// </summary>
        internal static string About_BtnClose {
            get {
                return ResourceManager.GetString("About_BtnClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Windows-based client for the Home Assistant platform..
        /// </summary>
        internal static string About_LblInfo1 {
            get {
                return ResourceManager.GetString("About_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created with love by.
        /// </summary>
        internal static string About_LblInfo2 {
            get {
                return ResourceManager.GetString("About_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application is open source and completely free.  Please check the project pages of 
        ///the used components for their individual licenses:.
        /// </summary>
        internal static string About_LblInfo3 {
            get {
                return ResourceManager.GetString("About_LblInfo3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A big &apos;thank you&apos; to the developers of these projects, who were kind enough to share
        ///their hard work with the rest of us mere mortals. .
        /// </summary>
        internal static string About_LblInfo4 {
            get {
                return ResourceManager.GetString("About_LblInfo4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to And of course; thanks to Paulus Shoutsen and the entire team of devs that 
        ///created and maintain Home Assistant :-).
        /// </summary>
        internal static string About_LblInfo5 {
            get {
                return ResourceManager.GetString("About_LblInfo5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Like this tool? Support us (read: keep us awake) by buying a cup of coffee:.
        /// </summary>
        internal static string About_LblInfo6 {
            get {
                return ResourceManager.GetString("About_LblInfo6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to or.
        /// </summary>
        internal static string About_LblOr {
            get {
                return ResourceManager.GetString("About_LblOr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        internal static string About_Title {
            get {
                return ResourceManager.GetString("About_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Button.
        /// </summary>
        internal static string CommandEntityType_Button {
            get {
                return ResourceManager.GetString("CommandEntityType_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light.
        /// </summary>
        internal static string CommandEntityType_Light {
            get {
                return ResourceManager.GetString("CommandEntityType_Light", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lock.
        /// </summary>
        internal static string CommandEntityType_Lock {
            get {
                return ResourceManager.GetString("CommandEntityType_Lock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Siren.
        /// </summary>
        internal static string CommandEntityType_Siren {
            get {
                return ResourceManager.GetString("CommandEntityType_Siren", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch.
        /// </summary>
        internal static string CommandEntityType_Switch {
            get {
                return ResourceManager.GetString("CommandEntityType_Switch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;close.
        /// </summary>
        internal static string CommandMqttTopic_BtnClose {
            get {
                return ResourceManager.GetString("CommandMqttTopic_BtnClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to copy &amp;to clipboard.
        /// </summary>
        internal static string CommandMqttTopic_BtnCopyClipboard {
            get {
                return ResourceManager.GetString("CommandMqttTopic_BtnCopyClipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to topic copied to clipboard.
        /// </summary>
        internal static string CommandMqttTopic_BtnCopyClipboard_Copied {
            get {
                return ResourceManager.GetString("CommandMqttTopic_BtnCopyClipboard_Copied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to help and examples.
        /// </summary>
        internal static string CommandMqttTopic_LblHelp {
            get {
                return ResourceManager.GetString("CommandMqttTopic_LblHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the MQTT topic on which you can publish action commands:.
        /// </summary>
        internal static string CommandMqttTopic_LblInfo1 {
            get {
                return ResourceManager.GetString("CommandMqttTopic_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MQTT Action Topic.
        /// </summary>
        internal static string CommandMqttTopic_Title {
            get {
                return ResourceManager.GetString("CommandMqttTopic_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;add new.
        /// </summary>
        internal static string CommandsConfig_BtnAdd {
            get {
                return ResourceManager.GetString("CommandsConfig_BtnAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;modify.
        /// </summary>
        internal static string CommandsConfig_BtnModify {
            get {
                return ResourceManager.GetString("CommandsConfig_BtnModify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;remove.
        /// </summary>
        internal static string CommandsConfig_BtnRemove {
            get {
                return ResourceManager.GetString("CommandsConfig_BtnRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;store and activate commands.
        /// </summary>
        internal static string CommandsConfig_BtnStore {
            get {
                return ResourceManager.GetString("CommandsConfig_BtnStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while saving the commands, check the logs for more info..
        /// </summary>
        internal static string CommandsConfig_BtnStore_MessageBox1 {
            get {
                return ResourceManager.GetString("CommandsConfig_BtnStore_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to storing and registering, please wait .. .
        /// </summary>
        internal static string CommandsConfig_BtnStore_Storing {
            get {
                return ResourceManager.GetString("CommandsConfig_BtnStore_Storing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to name.
        /// </summary>
        internal static string CommandsConfig_ClmName {
            get {
                return ResourceManager.GetString("CommandsConfig_ClmName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to type.
        /// </summary>
        internal static string CommandsConfig_ClmType {
            get {
                return ResourceManager.GetString("CommandsConfig_ClmType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to action.
        /// </summary>
        internal static string CommandsConfig_LblActionInfo {
            get {
                return ResourceManager.GetString("CommandsConfig_LblActionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to low integrity.
        /// </summary>
        internal static string CommandsConfig_LblLowIntegrity {
            get {
                return ResourceManager.GetString("CommandsConfig_LblLowIntegrity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commands Config.
        /// </summary>
        internal static string CommandsConfig_Title {
            get {
                return ResourceManager.GetString("CommandsConfig_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looks for the specified process, and tries to send its main window to the front.
        ///
        ///If the application is minimized, it&apos;ll get restored.
        ///
        ///Example: if you want to send VLC to the foreground, use &apos;vlc&apos;..
        /// </summary>
        internal static string CommandsManager_CommandsManager_SendWindowToFrontCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_CommandsManager_SendWindowToFrontCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execute a custom command.
        ///
        ///These commands run without special elevation. To run elevated, create a Scheduled Task, and use &apos;schtasks /Run /TN &quot;TaskName&quot;&apos; as the command to execute your task.
        ///
        ///Or enable &apos;run as low integrity&apos; for even stricter execution..
        /// </summary>
        internal static string CommandsManager_CustomCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_CustomCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executes the command through the configured custom executor (in Configuration -&gt; External Tools).
        ///
        ///Your command is provided as an argument &apos;as is&apos;, so you have to supply your own quotes etc. if necessary..
        /// </summary>
        internal static string CommandsManager_CustomExecutorCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_CustomExecutorCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the machine in hibernation..
        /// </summary>
        internal static string CommandsManager_HibernateCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_HibernateCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simulates a single keypress.
        ///
        ///You can pick any of these values: https://docs.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes 
        ///
        ///If you need more keys and/or modifiers like CTRL, use the MultipleKeys command..
        /// </summary>
        internal static string CommandsManager_KeyCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_KeyCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launches the provided URL, by default in your default browser.
        ///
        ///To use &apos;incognito&apos;, provide a specific browser in Configuration -&gt; External Tools.
        ///
        ///If you just want a window with a specific URL (not an entire browser), use a &apos;WebView&apos; command..
        /// </summary>
        internal static string CommandsManager_LaunchUrlCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_LaunchUrlCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Locks the current session..
        /// </summary>
        internal static string CommandsManager_LockCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_LockCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logs off the current session..
        /// </summary>
        internal static string CommandsManager_LogOffCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_LogOffCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simulates &apos;mute&apos; key..
        /// </summary>
        internal static string CommandsManager_MediaMuteCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_MediaMuteCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simulates &apos;media next&apos; key..
        /// </summary>
        internal static string CommandsManager_MediaNextCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_MediaNextCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simulates &apos;media playpause&apos; key..
        /// </summary>
        internal static string CommandsManager_MediaPlayPauseCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_MediaPlayPauseCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simulates &apos;media previous&apos; key..
        /// </summary>
        internal static string CommandsManager_MediaPreviousCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_MediaPreviousCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simulates &apos;volume down&apos; key..
        /// </summary>
        internal static string CommandsManager_MediaVolumeDownCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_MediaVolumeDownCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simulates &apos;volume up&apos; key..
        /// </summary>
        internal static string CommandsManager_MediaVolumeUpCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_MediaVolumeUpCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simulates pressing mulitple keys.
        ///
        ///You need to put [ ] between every key, otherwise HASS.Agent can&apos;t tell them apart. So say you want to press X TAB Y SHIFT-Z, it&apos;d be [X] [{TAB}] [Y] [+Z].
        ///
        ///There are a few tricks you can use:
        ///
        ///- If you want a bracket pressed, escape it, so [ is [\[] and ] is [\]] 
        ///
        ///- Special keys go between { }, like {TAB} or {UP}
        ///
        ///- Put a + in front of a key to add SHIFT, ^ for CTRL and % for ALT. So, +C is SHIFT-C. Or, +(CD) is SHIFT-C and SHIFT-D, while +CD is SHIFT-C and D
        ///        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CommandsManager_MultipleKeysCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_MultipleKeysCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execute a Powershell command or script.
        ///
        ///You can either provide the location of a script (*.ps1), or a single-line command.
        ///
        ///This will run without special elevation..
        /// </summary>
        internal static string CommandsManager_PowershellCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_PowershellCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resets all sensor checks, forcing all sensors to process and send their value.
        ///
        ///Useful for example if you want to force HASS.Agent to update all your sensors after a HA reboot..
        /// </summary>
        internal static string CommandsManager_PublishAllSensorsCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_PublishAllSensorsCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restarts the machine after one minute.
        ///
        ///Tip: accidentally triggered? Run &apos;shutdown /a&apos; to abort..
        /// </summary>
        internal static string CommandsManager_RestartCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_RestartCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shuts down the machine after one minute.
        ///
        ///Tip: accidentally triggered? Run &apos;shutdown /a&apos; to abort..
        /// </summary>
        internal static string CommandsManager_ShutdownCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_ShutdownCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Puts the machine to sleep.
        ///
        ///Note: due to a limitation in Windows, this only works if hibernation is disabled, otherwise it will just hibernate.
        ///
        ///You can use something like NirCmd (http://www.nirsoft.net/utils/nircmd.html) to circumvent this..
        /// </summary>
        internal static string CommandsManager_SleepCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_SleepCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows a window with the provided URL.
        ///
        ///This differs from the &apos;LaunchUrl&apos; command in that it doesn&apos;t load a full-fledged browser, just the provided URL in its own window.
        ///
        ///You can use this to for instance quickly show Home Assistant&apos;s dashboard.
        ///
        ///By default, it stores cookies indefinitely so you only have to log in once..
        /// </summary>
        internal static string CommandsManager_WebViewCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_WebViewCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to configure command &amp;parameters.
        /// </summary>
        internal static string CommandsMod_BtnConfigureCommand {
            get {
                return ResourceManager.GetString("CommandsMod_BtnConfigureCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;store command.
        /// </summary>
        internal static string CommandsMod_BtnStore {
            get {
                return ResourceManager.GetString("CommandsMod_BtnStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a commandtype first..
        /// </summary>
        internal static string CommandsMod_BtnStore_MessageBox1 {
            get {
                return ResourceManager.GetString("CommandsMod_BtnStore_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a valid commandtype first..
        /// </summary>
        internal static string CommandsMod_BtnStore_MessageBox2 {
            get {
                return ResourceManager.GetString("CommandsMod_BtnStore_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There&apos;s already a command with that name. Are you sure you want to continue?.
        /// </summary>
        internal static string CommandsMod_BtnStore_MessageBox3 {
            get {
                return ResourceManager.GetString("CommandsMod_BtnStore_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you don&apos;t enter a command, you can only use this entity with an &apos;action&apos; value through Home Assistant. Running it as-is won&apos;t do anything.
        ///
        ///Are you sure you want this?.
        /// </summary>
        internal static string CommandsMod_BtnStore_MessageBox4 {
            get {
                return ResourceManager.GetString("CommandsMod_BtnStore_MessageBox4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a keycode first..
        /// </summary>
        internal static string CommandsMod_BtnStore_MessageBox5 {
            get {
                return ResourceManager.GetString("CommandsMod_BtnStore_MessageBox5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking keys failed: {0}.
        /// </summary>
        internal static string CommandsMod_BtnStore_MessageBox6 {
            get {
                return ResourceManager.GetString("CommandsMod_BtnStore_MessageBox6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you don&apos;t enter an URL, you can only use this entity with an &apos;action&apos; value through Home Assistant. Running it as-is won&apos;t do anything.
        ///
        ///Are you sure you want this?.
        /// </summary>
        internal static string CommandsMod_BtnStore_MessageBox7 {
            get {
                return ResourceManager.GetString("CommandsMod_BtnStore_MessageBox7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you don&apos;t configure the command, you can only use this entity with an &apos;action&apos; value through Home Assistant and it&apos;ll show using the default settings. Running it as-is won&apos;t do anything.
        ///
        ///Are you sure you want this ? .
        /// </summary>
        internal static string CommandsMod_BtnStore_MessageBox8 {
            get {
                return ResourceManager.GetString("CommandsMod_BtnStore_MessageBox8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to launch in incognito mode.
        /// </summary>
        internal static string CommandsMod_CbCommandSpecific_Incognito {
            get {
                return ResourceManager.GetString("CommandsMod_CbCommandSpecific_Incognito", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;run as &apos;low integrity&apos;.
        /// </summary>
        internal static string CommandsMod_CbRunAsLowIntegrity {
            get {
                return ResourceManager.GetString("CommandsMod_CbRunAsLowIntegrity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   type.
        /// </summary>
        internal static string CommandsMod_ClmSensorName {
            get {
                return ResourceManager.GetString("CommandsMod_ClmSensorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to action.
        /// </summary>
        internal static string CommandsMod_LblActionInfo {
            get {
                return ResourceManager.GetString("CommandsMod_LblActionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to agent.
        /// </summary>
        internal static string CommandsMod_LblAgent {
            get {
                return ResourceManager.GetString("CommandsMod_LblAgent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to description.
        /// </summary>
        internal static string CommandsMod_LblDescription {
            get {
                return ResourceManager.GetString("CommandsMod_LblDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;entity type.
        /// </summary>
        internal static string CommandsMod_LblEntityType {
            get {
                return ResourceManager.GetString("CommandsMod_LblEntityType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to browser: default
        ///
        ///please configure a custom browser to enable incognito mode.
        /// </summary>
        internal static string CommandsMod_LblInfo_Browser {
            get {
                return ResourceManager.GetString("CommandsMod_LblInfo_Browser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to browser: {0}.
        /// </summary>
        internal static string CommandsMod_LblInfo_BrowserSpecific {
            get {
                return ResourceManager.GetString("CommandsMod_LblInfo_BrowserSpecific", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to executor: none
        ///
        ///please configure an executor or your command won&apos;t run.
        /// </summary>
        internal static string CommandsMod_LblInfo_Executor {
            get {
                return ResourceManager.GetString("CommandsMod_LblInfo_Executor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to executor: {0}.
        /// </summary>
        internal static string CommandsMod_LblInfo_ExecutorSpecific {
            get {
                return ResourceManager.GetString("CommandsMod_LblInfo_ExecutorSpecific", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to what&apos;s this?.
        /// </summary>
        internal static string CommandsMod_LblIntegrityInfo {
            get {
                return ResourceManager.GetString("CommandsMod_LblIntegrityInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Low integrity means your command will be executed with restricted privileges..
        /// </summary>
        internal static string CommandsMod_LblIntegrityInfo_InfoMsg1 {
            get {
                return ResourceManager.GetString("CommandsMod_LblIntegrityInfo_InfoMsg1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to That means it will only be able to save and modify files in certain locations,.
        /// </summary>
        internal static string CommandsMod_LblIntegrityInfo_InfoMsg2 {
            get {
                return ResourceManager.GetString("CommandsMod_LblIntegrityInfo_InfoMsg2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to such as the &apos;%USERPROFILE%\AppData\LocalLow&apos; folder or.
        /// </summary>
        internal static string CommandsMod_LblIntegrityInfo_InfoMsg3 {
            get {
                return ResourceManager.GetString("CommandsMod_LblIntegrityInfo_InfoMsg3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the &apos;HKEY_CURRENT_USER\Software\AppDataLow&apos; registry key..
        /// </summary>
        internal static string CommandsMod_LblIntegrityInfo_InfoMsg4 {
            get {
                return ResourceManager.GetString("CommandsMod_LblIntegrityInfo_InfoMsg4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You should test your command to make sure it&apos;s not influenced by this..
        /// </summary>
        internal static string CommandsMod_LblIntegrityInfo_InfoMsg5 {
            get {
                return ResourceManager.GetString("CommandsMod_LblIntegrityInfo_InfoMsg5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to show mqtt action topic.
        /// </summary>
        internal static string CommandsMod_LblMqttTopic {
            get {
                return ResourceManager.GetString("CommandsMod_LblMqttTopic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MQTT manager hasn&apos;t been setup properly, make sure you&apos;ve configured MQTT and restarted afterwards..
        /// </summary>
        internal static string CommandsMod_LblMqttTopic_MessageBox1 {
            get {
                return ResourceManager.GetString("CommandsMod_LblMqttTopic_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;name.
        /// </summary>
        internal static string CommandsMod_LblName {
            get {
                return ResourceManager.GetString("CommandsMod_LblName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to selected type.
        /// </summary>
        internal static string CommandsMod_LblSelectedType {
            get {
                return ResourceManager.GetString("CommandsMod_LblSelectedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to service.
        /// </summary>
        internal static string CommandsMod_LblService {
            get {
                return ResourceManager.GetString("CommandsMod_LblService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;config.
        /// </summary>
        internal static string CommandsMod_LblSetting {
            get {
                return ResourceManager.GetString("CommandsMod_LblSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to command.
        /// </summary>
        internal static string CommandsMod_LblSetting_Command {
            get {
                return ResourceManager.GetString("CommandsMod_LblSetting_Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to command or script.
        /// </summary>
        internal static string CommandsMod_LblSetting_CommandScript {
            get {
                return ResourceManager.GetString("CommandsMod_LblSetting_CommandScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to keycode.
        /// </summary>
        internal static string CommandsMod_LblSetting_KeyCode {
            get {
                return ResourceManager.GetString("CommandsMod_LblSetting_KeyCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to keycodes.
        /// </summary>
        internal static string CommandsMod_LblSetting_KeyCodes {
            get {
                return ResourceManager.GetString("CommandsMod_LblSetting_KeyCodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to URL.
        /// </summary>
        internal static string CommandsMod_LblSetting_Url {
            get {
                return ResourceManager.GetString("CommandsMod_LblSetting_Url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to hass.agent only!.
        /// </summary>
        internal static string CommandsMod_LblSpecificClient {
            get {
                return ResourceManager.GetString("CommandsMod_LblSpecificClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you don&apos;t enter a command or script, you can only use this entity with an &apos;action&apos; value through Home Assistant. Running it as-is won&apos;t do anything.
        ///
        ///Are you sure you want this?.
        /// </summary>
        internal static string CommandsMod_MessageBox_Action {
            get {
                return ResourceManager.GetString("CommandsMod_MessageBox_Action", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a valid entity type first..
        /// </summary>
        internal static string CommandsMod_MessageBox_EntityType {
            get {
                return ResourceManager.GetString("CommandsMod_MessageBox_EntityType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a name first..
        /// </summary>
        internal static string CommandsMod_MessageBox_Name {
            get {
                return ResourceManager.GetString("CommandsMod_MessageBox_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} only!.
        /// </summary>
        internal static string CommandsMod_SpecificClient {
            get {
                return ResourceManager.GetString("CommandsMod_SpecificClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command.
        /// </summary>
        internal static string CommandsMod_Title {
            get {
                return ResourceManager.GetString("CommandsMod_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod Command.
        /// </summary>
        internal static string CommandsMod_Title_ModCommand {
            get {
                return ResourceManager.GetString("CommandsMod_Title_ModCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Command.
        /// </summary>
        internal static string CommandsMod_Title_NewCommand {
            get {
                return ResourceManager.GetString("CommandsMod_Title_NewCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom.
        /// </summary>
        internal static string CommandType_CustomCommand {
            get {
                return ResourceManager.GetString("CommandType_CustomCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CustomExecutor.
        /// </summary>
        internal static string CommandType_CustomExecutorCommand {
            get {
                return ResourceManager.GetString("CommandType_CustomExecutorCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hibernate.
        /// </summary>
        internal static string CommandType_HibernateCommand {
            get {
                return ResourceManager.GetString("CommandType_HibernateCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key.
        /// </summary>
        internal static string CommandType_KeyCommand {
            get {
                return ResourceManager.GetString("CommandType_KeyCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LaunchUrl.
        /// </summary>
        internal static string CommandType_LaunchUrlCommand {
            get {
                return ResourceManager.GetString("CommandType_LaunchUrlCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lock.
        /// </summary>
        internal static string CommandType_LockCommand {
            get {
                return ResourceManager.GetString("CommandType_LockCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LogOff.
        /// </summary>
        internal static string CommandType_LogOffCommand {
            get {
                return ResourceManager.GetString("CommandType_LogOffCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MediaMute.
        /// </summary>
        internal static string CommandType_MediaMuteCommand {
            get {
                return ResourceManager.GetString("CommandType_MediaMuteCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MediaNext.
        /// </summary>
        internal static string CommandType_MediaNextCommand {
            get {
                return ResourceManager.GetString("CommandType_MediaNextCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MediaPlayPause.
        /// </summary>
        internal static string CommandType_MediaPlayPauseCommand {
            get {
                return ResourceManager.GetString("CommandType_MediaPlayPauseCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MediaPrevious.
        /// </summary>
        internal static string CommandType_MediaPreviousCommand {
            get {
                return ResourceManager.GetString("CommandType_MediaPreviousCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MediaVolumeDown.
        /// </summary>
        internal static string CommandType_MediaVolumeDownCommand {
            get {
                return ResourceManager.GetString("CommandType_MediaVolumeDownCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MediaVolumeUp.
        /// </summary>
        internal static string CommandType_MediaVolumeUpCommand {
            get {
                return ResourceManager.GetString("CommandType_MediaVolumeUpCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MultipleKeys.
        /// </summary>
        internal static string CommandType_MultipleKeysCommand {
            get {
                return ResourceManager.GetString("CommandType_MultipleKeysCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Powershell.
        /// </summary>
        internal static string CommandType_PowershellCommand {
            get {
                return ResourceManager.GetString("CommandType_PowershellCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PublishAllSensors.
        /// </summary>
        internal static string CommandType_PublishAllSensorsCommand {
            get {
                return ResourceManager.GetString("CommandType_PublishAllSensorsCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart.
        /// </summary>
        internal static string CommandType_RestartCommand {
            get {
                return ResourceManager.GetString("CommandType_RestartCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SendWindowToFront.
        /// </summary>
        internal static string CommandType_SendWindowToFrontCommand {
            get {
                return ResourceManager.GetString("CommandType_SendWindowToFrontCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shutdown.
        /// </summary>
        internal static string CommandType_ShutdownCommand {
            get {
                return ResourceManager.GetString("CommandType_ShutdownCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sleep.
        /// </summary>
        internal static string CommandType_SleepCommand {
            get {
                return ResourceManager.GetString("CommandType_SleepCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WebView.
        /// </summary>
        internal static string CommandType_WebViewCommand {
            get {
                return ResourceManager.GetString("CommandType_WebViewCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting.
        /// </summary>
        internal static string ComponentStatus_Connecting {
            get {
                return ResourceManager.GetString("ComponentStatus_Connecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabled.
        /// </summary>
        internal static string ComponentStatus_Disabled {
            get {
                return ResourceManager.GetString("ComponentStatus_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed.
        /// </summary>
        internal static string ComponentStatus_Failed {
            get {
                return ResourceManager.GetString("ComponentStatus_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading.
        /// </summary>
        internal static string ComponentStatus_Loading {
            get {
                return ResourceManager.GetString("ComponentStatus_Loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ok.
        /// </summary>
        internal static string ComponentStatus_Ok {
            get {
                return ResourceManager.GetString("ComponentStatus_Ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopped.
        /// </summary>
        internal static string ComponentStatus_Stopped {
            get {
                return ResourceManager.GetString("ComponentStatus_Stopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;test.
        /// </summary>
        internal static string ConfigExternalTools_BtnExternalBrowserIncognitoTest {
            get {
                return ResourceManager.GetString("ConfigExternalTools_BtnExternalBrowserIncognitoTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter the location of your browser&apos;s binary (.exe file)..
        /// </summary>
        internal static string ConfigExternalTools_BtnExternalBrowserIncognitoTest_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigExternalTools_BtnExternalBrowserIncognitoTest_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You didn&apos;t provide any incognito arguments, so the browser will probably launch normally.
        ///
        ///Do you want to continue?.
        /// </summary>
        internal static string ConfigExternalTools_BtnExternalBrowserIncognitoTest_MessageBox3 {
            get {
                return ResourceManager.GetString("ConfigExternalTools_BtnExternalBrowserIncognitoTest_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something went wrong while launching your browser in incognito mode.
        ///
        ///Consult the logs for m ore info..
        /// </summary>
        internal static string ConfigExternalTools_BtnExternalBrowserIncognitoTest_MessageBox4 {
            get {
                return ResourceManager.GetString("ConfigExternalTools_BtnExternalBrowserIncognitoTest_MessageBox4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided binary isn&apos;t found..
        /// </summary>
        internal static string ConfigExternalTools_ConfigExternalTools_BtnExternalBrowserIncognitoTest_MessageBox2 {
            get {
                return ResourceManager.GetString("ConfigExternalTools_ConfigExternalTools_BtnExternalBrowserIncognitoTest_MessageBo" +
                        "x2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to browser binary.
        /// </summary>
        internal static string ConfigExternalTools_LblBrowserBinary {
            get {
                return ResourceManager.GetString("ConfigExternalTools_LblBrowserBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to browser name.
        /// </summary>
        internal static string ConfigExternalTools_LblBrowserName {
            get {
                return ResourceManager.GetString("ConfigExternalTools_LblBrowserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to custom executor binary.
        /// </summary>
        internal static string ConfigExternalTools_LblCustomExecutorBinary {
            get {
                return ResourceManager.GetString("ConfigExternalTools_LblCustomExecutorBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to custom executor name.
        /// </summary>
        internal static string ConfigExternalTools_LblCustomExecutorName {
            get {
                return ResourceManager.GetString("ConfigExternalTools_LblCustomExecutorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This page allows you to configure bindings with external tools..
        /// </summary>
        internal static string ConfigExternalTools_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigExternalTools_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, HASS.Agent will launch URLs using your default browser. If you want, you can also
        ///configure a specific browser. Additionally, you can configure the arguments used to launch
        ///in private mode..
        /// </summary>
        internal static string ConfigExternalTools_LblInfo2 {
            get {
                return ResourceManager.GetString("ConfigExternalTools_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can configure HASS.Agent to use a specific executor, like perl or python. 
        ///Use the &apos;custom executor&apos; command to launch this executor..
        /// </summary>
        internal static string ConfigExternalTools_LblInfo3 {
            get {
                return ResourceManager.GetString("ConfigExternalTools_LblInfo3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to launch incognito arg.
        /// </summary>
        internal static string ConfigExternalTools_LblLaunchIncogArg {
            get {
                return ResourceManager.GetString("ConfigExternalTools_LblLaunchIncogArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to tip: doubleclick to browse.
        /// </summary>
        internal static string ConfigExternalTools_LblTip1 {
            get {
                return ResourceManager.GetString("ConfigExternalTools_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to device &amp;name.
        /// </summary>
        internal static string ConfigGeneral_LblDeviceName {
            get {
                return ResourceManager.GetString("ConfigGeneral_LblDeviceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to disconnected grace &amp;period.
        /// </summary>
        internal static string ConfigGeneral_LblDisconGracePeriod {
            get {
                return ResourceManager.GetString("ConfigGeneral_LblDisconGracePeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to seconds.
        /// </summary>
        internal static string ConfigGeneral_LblDisconGraceSeconds {
            get {
                return ResourceManager.GetString("ConfigGeneral_LblDisconGraceSeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This page contains general configuration items. For more settings, browse the tabs on the left..
        /// </summary>
        internal static string ConfigGeneral_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigGeneral_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device name is used to identify your machine on HA. 
        ///It&apos;s also used as a prefix for your command/sensor names (can be changed per entity)..
        /// </summary>
        internal static string ConfigGeneral_LblInfo2 {
            get {
                return ResourceManager.GetString("ConfigGeneral_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Important: if you change this value, HASS.Agent will unpublish all your sensors and commands
        ///and force a restart of itself, so they can be republished under the new device name.
        ///Your automations and scripts will keep working..
        /// </summary>
        internal static string ConfigGeneral_LblInfo3 {
            get {
                return ResourceManager.GetString("ConfigGeneral_LblInfo3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent will wait a while before notifying you of disconnects from MQTT or HA&apos;s API.
        ///You can set the amount of seconds here..
        /// </summary>
        internal static string ConfigGeneral_LblInfo4 {
            get {
                return ResourceManager.GetString("ConfigGeneral_LblInfo4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to interface &amp;language.
        /// </summary>
        internal static string ConfigGeneral_LblInterfaceLangauge {
            get {
                return ResourceManager.GetString("ConfigGeneral_LblInterfaceLangauge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;test connection.
        /// </summary>
        internal static string ConfigHomeAssistantApi_BtnTestApi {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_BtnTestApi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter a valid API key..
        /// </summary>
        internal static string ConfigHomeAssistantApi_BtnTestApi_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_BtnTestApi_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter your Home Assistant&apos;s URI..
        /// </summary>
        internal static string ConfigHomeAssistantApi_BtnTestApi_MessageBox2 {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_BtnTestApi_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to connect, the following error was returned:
        ///
        ///{0}.
        /// </summary>
        internal static string ConfigHomeAssistantApi_BtnTestApi_MessageBox3 {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_BtnTestApi_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection OK!
        ///
        ///Home Assistant version: {0}.
        /// </summary>
        internal static string ConfigHomeAssistantApi_BtnTestApi_MessageBox4 {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_BtnTestApi_MessageBox4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use &amp;automatic client certificate selection.
        /// </summary>
        internal static string ConfigHomeAssistantApi_CbHassAutoClientCertificate {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_CbHassAutoClientCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;api token.
        /// </summary>
        internal static string ConfigHomeAssistantApi_LblApiToken {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_LblApiToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to client &amp;certificate.
        /// </summary>
        internal static string ConfigHomeAssistantApi_LblClientCertificate {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_LblClientCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To learn which entities you have configured, and to send quick actions, HASS.Agent uses
        ///Home Assistant&apos;s API.
        ///
        ///Please provide a long-lived access token, and the address of your Home Assistant instance.
        ///
        ///You can get a token through your profile page. Scroll to the bottom and click &apos;CREATE TOKEN&apos;..
        /// </summary>
        internal static string ConfigHomeAssistantApi_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to server &amp;uri.
        /// </summary>
        internal static string ConfigHomeAssistantApi_LblServerUri {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_LblServerUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to tip: doubleclick this field to browse.
        /// </summary>
        internal static string ConfigHomeAssistantApi_LblTip1 {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;clear.
        /// </summary>
        internal static string ConfigHotKey_BtnClearHotKey {
            get {
                return ResourceManager.GetString("ConfigHotKey_BtnClearHotKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;enable quick actions hotkey.
        /// </summary>
        internal static string ConfigHotKey_CbEnableQuickActionsHotkey {
            get {
                return ResourceManager.GetString("ConfigHotKey_CbEnableQuickActionsHotkey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;hotkey combination.
        /// </summary>
        internal static string ConfigHotKey_LblHotkeyCombo {
            get {
                return ResourceManager.GetString("ConfigHotKey_LblHotkeyCombo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An easy way to pull up your quick actions is to use a global hotkey.
        ///
        ///This way, whatever you&apos;re doing on your machine, you can always interact with Home Assistant..
        /// </summary>
        internal static string ConfigHotKey_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigHotKey_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to execute port &amp;reservation.
        /// </summary>
        internal static string ConfigLocalApi_BtnExecutePortReservation {
            get {
                return ResourceManager.GetString("ConfigLocalApi_BtnExecutePortReservation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;enable local api.
        /// </summary>
        internal static string ConfigLocalApi_CbLocalApiActive {
            get {
                return ResourceManager.GetString("ConfigLocalApi_CbLocalApiActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent has its own local API, so Home Assistant can send requests (for instance to send a notification). You can configure it globally here, and afterwards you can configure the dependent sections (currently notifications and mediaplayer)..
        /// </summary>
        internal static string ConfigLocalApi_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigLocalApi_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To be able to listen to the requests, HASS.Agent needs to have its port reserved and opened in your firewall. You can use this button to have it done for you..
        /// </summary>
        internal static string ConfigLocalApi_LblInfo2 {
            get {
                return ResourceManager.GetString("ConfigLocalApi_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;port.
        /// </summary>
        internal static string ConfigLocalApi_LblPort {
            get {
                return ResourceManager.GetString("ConfigLocalApi_LblPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to clear audio cache.
        /// </summary>
        internal static string ConfigLocalStorage_BtnClearAudioCache {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_BtnClearAudioCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to cleaning ...
        /// </summary>
        internal static string ConfigLocalStorage_BtnClearAudioCache_InfoText1 {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_BtnClearAudioCache_InfoText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audio cache has been cleared!.
        /// </summary>
        internal static string ConfigLocalStorage_BtnClearAudioCache_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_BtnClearAudioCache_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to clear image cache.
        /// </summary>
        internal static string ConfigLocalStorage_BtnClearImageCache {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_BtnClearImageCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to cleaning ...
        /// </summary>
        internal static string ConfigLocalStorage_BtnClearImageCache_InfoText1 {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_BtnClearImageCache_InfoText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image cache has been cleared!.
        /// </summary>
        internal static string ConfigLocalStorage_BtnClearImageCache_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_BtnClearImageCache_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to clear webview cache.
        /// </summary>
        internal static string ConfigLocalStorage_BtnClearWebViewCache {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_BtnClearWebViewCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to cleaning ...
        /// </summary>
        internal static string ConfigLocalStorage_BtnClearWebViewCache_InfoText1 {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_BtnClearWebViewCache_InfoText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WebView cache has been cleared!.
        /// </summary>
        internal static string ConfigLocalStorage_BtnClearWebViewCache_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_BtnClearWebViewCache_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to open folder.
        /// </summary>
        internal static string ConfigLocalStorage_BtnOpenImageCache {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_BtnOpenImageCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to audio cache location.
        /// </summary>
        internal static string ConfigLocalStorage_LblAudioCacheLocation {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_LblAudioCacheLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to days.
        /// </summary>
        internal static string ConfigLocalStorage_LblCacheDays {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_LblCacheDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to image cache location.
        /// </summary>
        internal static string ConfigLocalStorage_LblCacheLocations {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_LblCacheLocations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to days.
        /// </summary>
        internal static string ConfigLocalStorage_LblImageCacheDays {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_LblImageCacheDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to image cache location.
        /// </summary>
        internal static string ConfigLocalStorage_LblImageCacheLocation {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_LblImageCacheLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some items, like images shown in notifications, have to be temporarily stored locally. You can
        ///configure the amount of days they should be kept before HASS.Agent deletes them.
        ///
        ///Enter &apos;0&apos; to keep them permanently..
        /// </summary>
        internal static string ConfigLocalStorage_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to keep audio for.
        /// </summary>
        internal static string ConfigLocalStorage_LblKeepAudio {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_LblKeepAudio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to keep images for.
        /// </summary>
        internal static string ConfigLocalStorage_LblKeepImages {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_LblKeepImages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to clear cache every.
        /// </summary>
        internal static string ConfigLocalStorage_LblKeepWebView {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_LblKeepWebView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to webview cache location.
        /// </summary>
        internal static string ConfigLocalStorage_LblWebViewCacheLocation {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_LblWebViewCacheLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;open logs folder.
        /// </summary>
        internal static string ConfigLogging_BtnShowLogs {
            get {
                return ResourceManager.GetString("ConfigLogging_BtnShowLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;enable extended logging.
        /// </summary>
        internal static string ConfigLogging_CbExtendedLogging {
            get {
                return ResourceManager.GetString("ConfigLogging_CbExtendedLogging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extended logging provides more verbose and in-depth logging, in case the default logging isn&apos;t
        ///sufficient.Please note that enabling this can cause the logfiles to grow large, and should only be
        ///used when you suspect something&apos;s wrong with HASS.Agent itself or when asked by the
        ///developers..
        /// </summary>
        internal static string ConfigLogging_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigLogging_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to media player &amp;documentation.
        /// </summary>
        internal static string ConfigMediaPlayer_BtnMediaPlayerReadme {
            get {
                return ResourceManager.GetString("ConfigMediaPlayer_BtnMediaPlayerReadme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;enable media player functionality.
        /// </summary>
        internal static string ConfigMediaPlayer_CbEnableMediaPlayer {
            get {
                return ResourceManager.GetString("ConfigMediaPlayer_CbEnableMediaPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent can act as a media player for Home Assistant, so you&apos;ll be able to control any media that&apos;s playing and send text-to-speech. The Local API needs to be enabled for this to work..
        /// </summary>
        internal static string ConfigMediaPlayer_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigMediaPlayer_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If something&apos;s not working, make sure you followed these steps:
        ///
        ///- Install HASS.Agent-MediaPlayer integration
        ///- Restart Home Assistant
        ///- Configure a media_player entity
        ///- Restart Home Assistant.
        /// </summary>
        internal static string ConfigMediaPlayer_LblInfo2 {
            get {
                return ResourceManager.GetString("ConfigMediaPlayer_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the local API is disabled, but the media player needs it to work.
        /// </summary>
        internal static string ConfigMediaPlayer_LblLocalApiDisabled {
            get {
                return ResourceManager.GetString("ConfigMediaPlayer_LblLocalApiDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;clear config.
        /// </summary>
        internal static string ConfigMqtt_BtnMqttClearConfig {
            get {
                return ResourceManager.GetString("ConfigMqtt_BtnMqttClearConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;allow untrusted certificates.
        /// </summary>
        internal static string ConfigMqtt_CbAllowUntrustedCertificates {
            get {
                return ResourceManager.GetString("ConfigMqtt_CbAllowUntrustedCertificates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;TLS.
        /// </summary>
        internal static string ConfigMqtt_CbMqttTls {
            get {
                return ResourceManager.GetString("ConfigMqtt_CbMqttTls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use &amp;retain flag.
        /// </summary>
        internal static string ConfigMqtt_CbUseRetainFlag {
            get {
                return ResourceManager.GetString("ConfigMqtt_CbUseRetainFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to broker ip address or hostname.
        /// </summary>
        internal static string ConfigMqtt_LblBrokerIp {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblBrokerIp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to password.
        /// </summary>
        internal static string ConfigMqtt_LblBrokerPassword {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblBrokerPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to port.
        /// </summary>
        internal static string ConfigMqtt_LblBrokerPort {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblBrokerPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to username.
        /// </summary>
        internal static string ConfigMqtt_LblBrokerUsername {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblBrokerUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to client certificate.
        /// </summary>
        internal static string ConfigMqtt_LblClientCert {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblClientCert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to client id.
        /// </summary>
        internal static string ConfigMqtt_LblClientId {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to discovery prefix.
        /// </summary>
        internal static string ConfigMqtt_LblDiscoPrefix {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblDiscoPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commands and sensors are sent through MQTT. Please provide credentials for your server. If
        ///you&apos;re using the HA addon, you can probably use the preset address..
        /// </summary>
        internal static string ConfigMqtt_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to root certificate.
        /// </summary>
        internal static string ConfigMqtt_LblRootCert {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblRootCert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (leave default if not sure).
        /// </summary>
        internal static string ConfigMqtt_LblTip1 {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (leave empty for random).
        /// </summary>
        internal static string ConfigMqtt_LblTip2 {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblTip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to tip: doubleclick these fields to browse.
        /// </summary>
        internal static string ConfigMqtt_LblTip3 {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblTip3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to execute port reservation.
        /// </summary>
        internal static string ConfigNotifications_BtnExecutePortReservation {
            get {
                return ResourceManager.GetString("ConfigNotifications_BtnExecutePortReservation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to executing, please wait ...
        /// </summary>
        internal static string ConfigNotifications_BtnExecutePortReservation_Busy {
            get {
                return ResourceManager.GetString("ConfigNotifications_BtnExecutePortReservation_Busy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something went wrong!
        ///
        ///Please manually execute the required command. It has been copied onto your clipboard, you just need to paste it into an elevated command prompt.
        ///
        ///Remember to change your firewall rule&apos;s port as well..
        /// </summary>
        internal static string ConfigNotifications_BtnExecutePortReservation_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigNotifications_BtnExecutePortReservation_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to notifications &amp;documentation.
        /// </summary>
        internal static string ConfigNotifications_BtnNotificationsReadme {
            get {
                return ResourceManager.GetString("ConfigNotifications_BtnNotificationsReadme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to show test notification.
        /// </summary>
        internal static string ConfigNotifications_BtnSendTestNotification {
            get {
                return ResourceManager.GetString("ConfigNotifications_BtnSendTestNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notifications are still disabled. Please enable, restart HASS.Agent and try again..
        /// </summary>
        internal static string ConfigNotifications_BtnSendTestNotification_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigNotifications_BtnSendTestNotification_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The notification should&apos;ve popped up. If not, check the logs, or check the documentation for troubleshooting tips.
        ///
        ///Note: this only tests locally whether notifications can be shown!.
        /// </summary>
        internal static string ConfigNotifications_BtnSendTestNotification_MessageBox2 {
            get {
                return ResourceManager.GetString("ConfigNotifications_BtnSendTestNotification_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;accept notifications.
        /// </summary>
        internal static string ConfigNotifications_CbAcceptNotifications {
            get {
                return ResourceManager.GetString("ConfigNotifications_CbAcceptNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;ignore certificate errors for images.
        /// </summary>
        internal static string ConfigNotifications_CbNotificationsIgnoreImageCertErrors {
            get {
                return ResourceManager.GetString("ConfigNotifications_CbNotificationsIgnoreImageCertErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent can receive notifications from Home Assistant, using text and/or images. The Local API needs to be enabled for this to work..
        /// </summary>
        internal static string ConfigNotifications_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigNotifications_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If something&apos;s not working, make sure you followed these steps:
        ///
        ///- Install HASS.Agent-Notifier integration
        ///- Restart Home Assistant
        ///- Configure a notifier entity
        ///- Restart Home Assistant.
        /// </summary>
        internal static string ConfigNotifications_LblInfo2 {
            get {
                return ResourceManager.GetString("ConfigNotifications_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the local API is disabled, but the media player needs it to work.
        /// </summary>
        internal static string ConfigNotifications_LblLocalApiDisabled {
            get {
                return ResourceManager.GetString("ConfigNotifications_LblLocalApiDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to port.
        /// </summary>
        internal static string ConfigNotifications_LblPort {
            get {
                return ResourceManager.GetString("ConfigNotifications_LblPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a test notification..
        /// </summary>
        internal static string ConfigNotifications_TestNotification {
            get {
                return ResourceManager.GetString("ConfigNotifications_TestNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;disable service.
        /// </summary>
        internal static string ConfigService_BtnDisableService {
            get {
                return ResourceManager.GetString("ConfigService_BtnDisableService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something went wrong trying to disable the service. Did you allow the UAC prompt?
        ///
        ///Check the HASS.Agent (not the service) logs for more info..
        /// </summary>
        internal static string ConfigService_BtnDisableService_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigService_BtnDisableService_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;enable service.
        /// </summary>
        internal static string ConfigService_BtnEnableService {
            get {
                return ResourceManager.GetString("ConfigService_BtnEnableService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something went wrong trying to enable the service. Did you allow the UAC prompt?
        ///
        ///Check the HASS.Agent (not the service) logs for more info..
        /// </summary>
        internal static string ConfigService_BtnEnableService_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigService_BtnEnableService_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;reinstall service.
        /// </summary>
        internal static string ConfigService_BtnReinstallService {
            get {
                return ResourceManager.GetString("ConfigService_BtnReinstallService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to open service &amp;logs folder.
        /// </summary>
        internal static string ConfigService_BtnShowLogs {
            get {
                return ResourceManager.GetString("ConfigService_BtnShowLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something went wrong trying to reinstall the service. Did you allow the UAC prompt?
        ///
        ///Check the HASS.Agent (not the service) logs for more info..
        /// </summary>
        internal static string ConfigService_BtnShowLogs_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigService_BtnShowLogs_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to s&amp;tart service.
        /// </summary>
        internal static string ConfigService_BtnStartService {
            get {
                return ResourceManager.GetString("ConfigService_BtnStartService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service is set to &apos;disabled&apos;, so it can&apos;t be started.
        ///
        ///Please enable the service first, then try again..
        /// </summary>
        internal static string ConfigService_BtnStartService_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigService_BtnStartService_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something went wrong trying to start the service. Did you allow the UAC prompt?
        ///
        ///Check the HASS.Agent (not the service) logs for more info..
        /// </summary>
        internal static string ConfigService_BtnStartService_MessageBox2 {
            get {
                return ResourceManager.GetString("ConfigService_BtnStartService_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;stop service.
        /// </summary>
        internal static string ConfigService_BtnStopService {
            get {
                return ResourceManager.GetString("ConfigService_BtnStopService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something went wrong trying to stop the service. Did you allow the UAC prompt?
        ///
        ///Check the HASS.Agent (not the service) logs for more info..
        /// </summary>
        internal static string ConfigService_BtnStopService_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigService_BtnStopService_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to disabled.
        /// </summary>
        internal static string ConfigService_Disabled {
            get {
                return ResourceManager.GetString("ConfigService_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to failed.
        /// </summary>
        internal static string ConfigService_Failed {
            get {
                return ResourceManager.GetString("ConfigService_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The satellite service allows you to run sensors and commands even when no user&apos;s logged in. 
        ///Use the &apos;satellite service&apos; button on the main window to manage it..
        /// </summary>
        internal static string ConfigService_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigService_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you don&apos;t configure the service, it won&apos;t do anything. However, you can still decide to disable it as well.
        ///The installer will leave the disabled service alone(if you remove the service, the installer will reinstall it)..
        /// </summary>
        internal static string ConfigService_LblInfo2 {
            get {
                return ResourceManager.GetString("ConfigService_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can try reinstalling the service if it&apos;s not working correctly.
        ///Your configuration and entities won&apos;t be removed..
        /// </summary>
        internal static string ConfigService_LblInfo3 {
            get {
                return ResourceManager.GetString("ConfigService_LblInfo3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the service still fails after reinstalling, please open a ticket and send the content of the latest log..
        /// </summary>
        internal static string ConfigService_LblInfo4 {
            get {
                return ResourceManager.GetString("ConfigService_LblInfo4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to service status:.
        /// </summary>
        internal static string ConfigService_LblServiceStatusInfo {
            get {
                return ResourceManager.GetString("ConfigService_LblServiceStatusInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to not installed.
        /// </summary>
        internal static string ConfigService_NotInstalled {
            get {
                return ResourceManager.GetString("ConfigService_NotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to running.
        /// </summary>
        internal static string ConfigService_Running {
            get {
                return ResourceManager.GetString("ConfigService_Running", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to stopped.
        /// </summary>
        internal static string ConfigService_Stopped {
            get {
                return ResourceManager.GetString("ConfigService_Stopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;enable start-on-login.
        /// </summary>
        internal static string ConfigStartup_BtnSetStartOnLogin {
            get {
                return ResourceManager.GetString("ConfigStartup_BtnSetStartOnLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something went wrong while disabling start-on-login.
        ///
        ///Check the logs for more info..
        /// </summary>
        internal static string ConfigStartup_BtnSetStartOnLogin_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigStartup_BtnSetStartOnLogin_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something went wrong while enabling start-on-login.
        ///
        ///Check the logs for more info..
        /// </summary>
        internal static string ConfigStartup_BtnSetStartOnLogin_MessageBox2 {
            get {
                return ResourceManager.GetString("ConfigStartup_BtnSetStartOnLogin_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to disable start-on-login.
        /// </summary>
        internal static string ConfigStartup_Disable {
            get {
                return ResourceManager.GetString("ConfigStartup_Disable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to disabled.
        /// </summary>
        internal static string ConfigStartup_Disabled {
            get {
                return ResourceManager.GetString("ConfigStartup_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to enable start-on-login.
        /// </summary>
        internal static string ConfigStartup_Enable {
            get {
                return ResourceManager.GetString("ConfigStartup_Enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to enabled.
        /// </summary>
        internal static string ConfigStartup_Enabled {
            get {
                return ResourceManager.GetString("ConfigStartup_Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent can start when you login by creating an entry in your user profile&apos;s registry.
        ///
        ///Since HASS.Agent is user based, if you want to launch for another user, just install and config
        ///HASS.Agent there..
        /// </summary>
        internal static string ConfigStartup_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigStartup_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to start-on-login status:.
        /// </summary>
        internal static string ConfigStartup_LblStartOnLoginStatusInfo {
            get {
                return ResourceManager.GetString("ConfigStartup_LblStartOnLoginStatusInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to show &amp;preview.
        /// </summary>
        internal static string ConfigTrayIcon_BtnShowWebViewPreview {
            get {
                return ResourceManager.GetString("ConfigTrayIcon_BtnShowWebViewPreview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to show &amp;default menu.
        /// </summary>
        internal static string ConfigTrayIcon_CbDefaultMenu {
            get {
                return ResourceManager.GetString("ConfigTrayIcon_CbDefaultMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to show &amp;webview.
        /// </summary>
        internal static string ConfigTrayIcon_CbShowWebView {
            get {
                return ResourceManager.GetString("ConfigTrayIcon_CbShowWebView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;keep page loaded in the background.
        /// </summary>
        internal static string ConfigTrayIcon_CbWebViewKeepLoaded {
            get {
                return ResourceManager.GetString("ConfigTrayIcon_CbWebViewKeepLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control the way the tray icon behaves on a right mousebutton click..
        /// </summary>
        internal static string ConfigTrayIcon_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigTrayIcon_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to this uses some resources, but reduces loading time.
        /// </summary>
        internal static string ConfigTrayIcon_LblInfo2 {
            get {
                return ResourceManager.GetString("ConfigTrayIcon_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to size.
        /// </summary>
        internal static string ConfigTrayIcon_LblWebViewSize {
            get {
                return ResourceManager.GetString("ConfigTrayIcon_LblWebViewSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;url to show (for instance an Home Assistant dashboard).
        /// </summary>
        internal static string ConfigTrayIcon_LblWebViewUrl {
            get {
                return ResourceManager.GetString("ConfigTrayIcon_LblWebViewUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to notify me of &amp;beta releases as well.
        /// </summary>
        internal static string ConfigUpdates_CbBetaUpdates {
            get {
                return ResourceManager.GetString("ConfigUpdates_CbBetaUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to offer to &amp;download and launch the installer for me.
        /// </summary>
        internal static string ConfigUpdates_CbExecuteUpdater {
            get {
                return ResourceManager.GetString("ConfigUpdates_CbExecuteUpdater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to notify me when a new &amp;release is available.
        /// </summary>
        internal static string ConfigUpdates_CbUpdates {
            get {
                return ResourceManager.GetString("ConfigUpdates_CbUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you want, HASS.Agent can check for updates in the background. 
        ///
        ///You&apos;ll get a notification (once per update) , letting you know a new version is ready to be installed..
        /// </summary>
        internal static string ConfigUpdates_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigUpdates_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When there&apos;s an update, HASS.Agent will offer the option to open the release page. But if you
        ///want, HASS.Agent can also download and launch the installer for you - even less to do !
        ///
        ///The certificate of the downloaded file will get checked before execution..
        /// </summary>
        internal static string ConfigUpdates_LblInfo2 {
            get {
                return ResourceManager.GetString("ConfigUpdates_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;about.
        /// </summary>
        internal static string Configuration_BtnAbout {
            get {
                return ResourceManager.GetString("Configuration_BtnAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to close &amp;without saving.
        /// </summary>
        internal static string Configuration_BtnClose {
            get {
                return ResourceManager.GetString("Configuration_BtnClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;help &amp;&amp; contact.
        /// </summary>
        internal static string Configuration_BtnHelp {
            get {
                return ResourceManager.GetString("Configuration_BtnHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;save configuration.
        /// </summary>
        internal static string Configuration_BtnStore {
            get {
                return ResourceManager.GetString("Configuration_BtnStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to busy, hold on ...
        /// </summary>
        internal static string Configuration_BtnStore_Busy {
            get {
                return ResourceManager.GetString("Configuration_BtnStore_Busy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something went wrong while preparing to restart.
        ///Please restart manually..
        /// </summary>
        internal static string Configuration_MessageBox_RestartManually {
            get {
                return ResourceManager.GetString("Configuration_MessageBox_RestartManually", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;ve changed your device&apos;s name.
        ///
        ///All your sensors and commands will now be unpublished, and HASS.Agent will restart afterwards to republish them.
        ///
        ///Don&apos;t worry, they&apos;ll keep their current names, so your automations or scripts will keep working.
        ///
        ///Note: the name will get &apos;sanitized&apos;, which means everything except letters, digits and whitespace get replaced by an underscore. This is required by HA..
        /// </summary>
        internal static string Configuration_ProcessChanges_MessageBox1 {
            get {
                return ResourceManager.GetString("Configuration_ProcessChanges_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;ve changed the local API&apos;s port. This new port needs to be reserved.
        ///
        ///You&apos;ll get an UAC request to do so, please approve..
        /// </summary>
        internal static string Configuration_ProcessChanges_MessageBox2 {
            get {
                return ResourceManager.GetString("Configuration_ProcessChanges_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something went wrong!
        ///
        ///Please manually execute the required command. It has been copied onto your clipboard, you just need to paste it into an elevated command prompt.
        ///
        ///Remember to change your firewall rule&apos;s port as well..
        /// </summary>
        internal static string Configuration_ProcessChanges_MessageBox3 {
            get {
                return ResourceManager.GetString("Configuration_ProcessChanges_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The port has succesfully been reserved!
        ///
        ///HASS.Agent will now restart to activate the new configuration..
        /// </summary>
        internal static string Configuration_ProcessChanges_MessageBox4 {
            get {
                return ResourceManager.GetString("Configuration_ProcessChanges_MessageBox4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your configuration has been saved. Most changes require HASS.Agent to restart before they take effect.
        ///
        ///Do you want to restart now?.
        /// </summary>
        internal static string Configuration_ProcessChanges_MessageBox5 {
            get {
                return ResourceManager.GetString("Configuration_ProcessChanges_MessageBox5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to External Tools.
        /// </summary>
        internal static string Configuration_TabExternalTools {
            get {
                return ResourceManager.GetString("Configuration_TabExternalTools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General.
        /// </summary>
        internal static string Configuration_TabGeneral {
            get {
                return ResourceManager.GetString("Configuration_TabGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Home Assistant API.
        /// </summary>
        internal static string Configuration_TabHassApi {
            get {
                return ResourceManager.GetString("Configuration_TabHassApi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HotKey.
        /// </summary>
        internal static string Configuration_TabHotKey {
            get {
                return ResourceManager.GetString("Configuration_TabHotKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local API.
        /// </summary>
        internal static string Configuration_TablLocalApi {
            get {
                return ResourceManager.GetString("Configuration_TablLocalApi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Storage.
        /// </summary>
        internal static string Configuration_TabLocalStorage {
            get {
                return ResourceManager.GetString("Configuration_TabLocalStorage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging.
        /// </summary>
        internal static string Configuration_TabLogging {
            get {
                return ResourceManager.GetString("Configuration_TabLogging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Media Player.
        /// </summary>
        internal static string Configuration_TabMediaPlayer {
            get {
                return ResourceManager.GetString("Configuration_TabMediaPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MQTT.
        /// </summary>
        internal static string Configuration_TabMQTT {
            get {
                return ResourceManager.GetString("Configuration_TabMQTT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notifications.
        /// </summary>
        internal static string Configuration_TabNotifications {
            get {
                return ResourceManager.GetString("Configuration_TabNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Satellite Service.
        /// </summary>
        internal static string Configuration_TabService {
            get {
                return ResourceManager.GetString("Configuration_TabService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Startup.
        /// </summary>
        internal static string Configuration_TabStartup {
            get {
                return ResourceManager.GetString("Configuration_TabStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tray Icon.
        /// </summary>
        internal static string Configuration_TabTrayIcon {
            get {
                return ResourceManager.GetString("Configuration_TabTrayIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updates.
        /// </summary>
        internal static string Configuration_TabUpdates {
            get {
                return ResourceManager.GetString("Configuration_TabUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration.
        /// </summary>
        internal static string Configuration_Title {
            get {
                return ResourceManager.GetString("Configuration_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;exit.
        /// </summary>
        internal static string ExitDialog_BtnExit {
            get {
                return ResourceManager.GetString("ExitDialog_BtnExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;hide.
        /// </summary>
        internal static string ExitDialog_BtnHide {
            get {
                return ResourceManager.GetString("ExitDialog_BtnHide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;restart.
        /// </summary>
        internal static string ExitDialog_BtnRestart {
            get {
                return ResourceManager.GetString("ExitDialog_BtnRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What would you like to do?.
        /// </summary>
        internal static string ExitDialog_LblInfo1 {
            get {
                return ResourceManager.GetString("ExitDialog_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit Dialog.
        /// </summary>
        internal static string ExitDialog_Title {
            get {
                return ResourceManager.GetString("ExitDialog_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        internal static string HassAction_Close {
            get {
                return ResourceManager.GetString("HassAction_Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Off.
        /// </summary>
        internal static string HassAction_Off {
            get {
                return ResourceManager.GetString("HassAction_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On.
        /// </summary>
        internal static string HassAction_On {
            get {
                return ResourceManager.GetString("HassAction_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open.
        /// </summary>
        internal static string HassAction_Open {
            get {
                return ResourceManager.GetString("HassAction_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pause.
        /// </summary>
        internal static string HassAction_Pause {
            get {
                return ResourceManager.GetString("HassAction_Pause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Play.
        /// </summary>
        internal static string HassAction_Play {
            get {
                return ResourceManager.GetString("HassAction_Play", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop.
        /// </summary>
        internal static string HassAction_Stop {
            get {
                return ResourceManager.GetString("HassAction_Stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle.
        /// </summary>
        internal static string HassAction_Toggle {
            get {
                return ResourceManager.GetString("HassAction_Toggle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to client certificate file not found.
        /// </summary>
        internal static string HassApiManager_CheckHassConfig_CertNotFound {
            get {
                return ResourceManager.GetString("HassApiManager_CheckHassConfig_CertNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to unable to fetch config, check api key.
        /// </summary>
        internal static string HassApiManager_CheckHassConfig_ConfigFailed {
            get {
                return ResourceManager.GetString("HassApiManager_CheckHassConfig_ConfigFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to unable to connect, check uri.
        /// </summary>
        internal static string HassApiManager_CheckHassConfig_UnableToConnect {
            get {
                return ResourceManager.GetString("HassApiManager_CheckHassConfig_UnableToConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to unable to connect, check uri and config.
        /// </summary>
        internal static string HassApiManager_ConnectionFailed {
            get {
                return ResourceManager.GetString("HassApiManager_ConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to hass api: connection failed.
        /// </summary>
        internal static string HassApiManager_ToolTip_ConnectionFailed {
            get {
                return ResourceManager.GetString("HassApiManager_ToolTip_ConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to hass api: connection setup failed.
        /// </summary>
        internal static string HassApiManager_ToolTip_ConnectionSetupFailed {
            get {
                return ResourceManager.GetString("HassApiManager_ToolTip_ConnectionSetupFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to hass api: initial connection failed.
        /// </summary>
        internal static string HassApiManager_ToolTip_InitialConnectionFailed {
            get {
                return ResourceManager.GetString("HassApiManager_ToolTip_InitialConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to quick action: action failed, check the logs for info.
        /// </summary>
        internal static string HassApiManager_ToolTip_QuickActionFailed {
            get {
                return ResourceManager.GetString("HassApiManager_ToolTip_QuickActionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to quick action: action failed, entity not found.
        /// </summary>
        internal static string HassApiManager_ToolTip_QuickActionFailedOnEntity {
            get {
                return ResourceManager.GetString("HassApiManager_ToolTip_QuickActionFailedOnEntity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automation.
        /// </summary>
        internal static string HassDomain_Automation {
            get {
                return ResourceManager.GetString("HassDomain_Automation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Climate.
        /// </summary>
        internal static string HassDomain_Climate {
            get {
                return ResourceManager.GetString("HassDomain_Climate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cover.
        /// </summary>
        internal static string HassDomain_Cover {
            get {
                return ResourceManager.GetString("HassDomain_Cover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent Commands.
        /// </summary>
        internal static string HassDomain_HASSAgentCommands {
            get {
                return ResourceManager.GetString("HassDomain_HASSAgentCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputBoolean.
        /// </summary>
        internal static string HassDomain_InputBoolean {
            get {
                return ResourceManager.GetString("HassDomain_InputBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light.
        /// </summary>
        internal static string HassDomain_Light {
            get {
                return ResourceManager.GetString("HassDomain_Light", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MediaPlayer.
        /// </summary>
        internal static string HassDomain_MediaPlayer {
            get {
                return ResourceManager.GetString("HassDomain_MediaPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scene.
        /// </summary>
        internal static string HassDomain_Scene {
            get {
                return ResourceManager.GetString("HassDomain_Scene", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script.
        /// </summary>
        internal static string HassDomain_Script {
            get {
                return ResourceManager.GetString("HassDomain_Script", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch.
        /// </summary>
        internal static string HassDomain_Switch {
            get {
                return ResourceManager.GetString("HassDomain_Switch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;close.
        /// </summary>
        internal static string Help_BtnClose {
            get {
                return ResourceManager.GetString("Help_BtnClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        internal static string Help_LblAbout {
            get {
                return ResourceManager.GetString("Help_LblAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get help with setting up and using HASS.Agent, 
        ///report bugs or just talk about whatever..
        /// </summary>
        internal static string Help_LblDiscordInfo {
            get {
                return ResourceManager.GetString("Help_LblDiscordInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Documentation.
        /// </summary>
        internal static string Help_LblDocumentation {
            get {
                return ResourceManager.GetString("Help_LblDocumentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Documentation and usage examples..
        /// </summary>
        internal static string Help_LblDocumentationInfo {
            get {
                return ResourceManager.GetString("Help_LblDocumentationInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GitHub tickets.
        /// </summary>
        internal static string Help_LblGitHub {
            get {
                return ResourceManager.GetString("Help_LblGitHub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report bugs, feature requests, ideas, tips, ...
        /// </summary>
        internal static string Help_LblGitHubInfo {
            get {
                return ResourceManager.GetString("Help_LblGitHubInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Home Assistant forum.
        /// </summary>
        internal static string Help_LblHAForum {
            get {
                return ResourceManager.GetString("Help_LblHAForum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bit of everything, with the addition that other
        ///HA users can help as well..
        /// </summary>
        internal static string Help_LblHAInfo {
            get {
                return ResourceManager.GetString("Help_LblHAInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stuck while using HASS.Agent, need some help integrating the
        ///sensors/commands or have a great idea for the next version?
        ///
        ///There are a few channels through which you can reach us:.
        /// </summary>
        internal static string Help_LblInfo1 {
            get {
                return ResourceManager.GetString("Help_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wiki.
        /// </summary>
        internal static string Help_LblWiki {
            get {
                return ResourceManager.GetString("Help_LblWiki", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Documentation and usage examples..
        /// </summary>
        internal static string Help_LblWikiInfo {
            get {
                return ResourceManager.GetString("Help_LblWikiInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help.
        /// </summary>
        internal static string Help_Title {
            get {
                return ResourceManager.GetString("Help_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your input language &apos;{0}&apos; is known to collide with the default CTRL-ALT-Q hotkey. Please set your own..
        /// </summary>
        internal static string HelperFunctions_InputLanguageCheckDiffers_ErrorMsg1 {
            get {
                return ResourceManager.GetString("HelperFunctions_InputLanguageCheckDiffers_ErrorMsg1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your input language &apos;{0}&apos; is unknown, and might collide with the default CTRL-ALT-Q hotkey. Please check to be sure. If it does, consider opening a ticket on GitHub so it can be added to the list..
        /// </summary>
        internal static string HelperFunctions_InputLanguageCheckDiffers_ErrorMsg2 {
            get {
                return ResourceManager.GetString("HelperFunctions_InputLanguageCheckDiffers_ErrorMsg2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to no keys found.
        /// </summary>
        internal static string HelperFunctions_ParseMultipleKeys_ErrorMsg1 {
            get {
                return ResourceManager.GetString("HelperFunctions_ParseMultipleKeys_ErrorMsg1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to brackets missing, start and close all keys with [ ].
        /// </summary>
        internal static string HelperFunctions_ParseMultipleKeys_ErrorMsg2 {
            get {
                return ResourceManager.GetString("HelperFunctions_ParseMultipleKeys_ErrorMsg2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to error while parsing keys, check the log for more info.
        /// </summary>
        internal static string HelperFunctions_ParseMultipleKeys_ErrorMsg3 {
            get {
                return ResourceManager.GetString("HelperFunctions_ParseMultipleKeys_ErrorMsg3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the number of &apos;[&apos; brackets don&apos;t correspond to the &apos;]&apos; ones ({0} to {1}).
        /// </summary>
        internal static string HelperFunctions_ParseMultipleKeys_ErrorMsg4 {
            get {
                return ResourceManager.GetString("HelperFunctions_ParseMultipleKeys_ErrorMsg4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error trying to bind the API to port {0}.
        ///
        ///Make sure no other instance of HASS.Agent is running and the port is available and registered..
        /// </summary>
        internal static string LocalApiManager_Initialize_MessageBox1 {
            get {
                return ResourceManager.GetString("LocalApiManager_Initialize_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Locked.
        /// </summary>
        internal static string LockState_Locked {
            get {
                return ResourceManager.GetString("LockState_Locked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        internal static string LockState_Unknown {
            get {
                return ResourceManager.GetString("LockState_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unlocked.
        /// </summary>
        internal static string LockState_Unlocked {
            get {
                return ResourceManager.GetString("LockState_Unlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///&amp;quick actions.
        /// </summary>
        internal static string Main_BtnActionsManager {
            get {
                return ResourceManager.GetString("Main_BtnActionsManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///c&amp;onfiguration.
        /// </summary>
        internal static string Main_BtnAppSettings {
            get {
                return ResourceManager.GetString("Main_BtnAppSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to check for &amp;updates.
        /// </summary>
        internal static string Main_BtnCheckForUpdate {
            get {
                return ResourceManager.GetString("Main_BtnCheckForUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///loading.
        /// </summary>
        internal static string Main_BtnCommandsManager {
            get {
                return ResourceManager.GetString("Main_BtnCommandsManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///&amp;commands.
        /// </summary>
        internal static string Main_BtnCommandsManager_Ready {
            get {
                return ResourceManager.GetString("Main_BtnCommandsManager_Ready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;hide.
        /// </summary>
        internal static string Main_BtnHide {
            get {
                return ResourceManager.GetString("Main_BtnHide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///local &amp;sensors.
        /// </summary>
        internal static string Main_BtnSensorsManage_Ready {
            get {
                return ResourceManager.GetString("Main_BtnSensorsManage_Ready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///loading.
        /// </summary>
        internal static string Main_BtnSensorsManager {
            get {
                return ResourceManager.GetString("Main_BtnSensorsManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///s&amp;atellite service.
        /// </summary>
        internal static string Main_BtnServiceManager {
            get {
                return ResourceManager.GetString("Main_BtnServiceManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It looks like you&apos;re using an alternative scaling. This may result in some parts of HASS.Agent not looking as intended.
        ///
        ///Please report any unusable aspects on GitHub. Thanks!
        ///
        ///Note: this message only shows once..
        /// </summary>
        internal static string Main_CheckDpiScalingFactor_MessageBox1 {
            get {
                return ResourceManager.GetString("Main_CheckDpiScalingFactor_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;re running the latest version: {0}{1}.
        /// </summary>
        internal static string Main_CheckForUpdate_MessageBox1 {
            get {
                return ResourceManager.GetString("Main_CheckForUpdate_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to check for updates.
        /// </summary>
        internal static string Main_CheckForUpdates {
            get {
                return ResourceManager.GetString("Main_CheckForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to checking ...
        /// </summary>
        internal static string Main_Checking {
            get {
                return ResourceManager.GetString("Main_Checking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to controls.
        /// </summary>
        internal static string Main_GpControls {
            get {
                return ResourceManager.GetString("Main_GpControls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to system status.
        /// </summary>
        internal static string Main_GpStatus {
            get {
                return ResourceManager.GetString("Main_GpStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to commands:.
        /// </summary>
        internal static string Main_LblCommands {
            get {
                return ResourceManager.GetString("Main_LblCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to home assistant api:.
        /// </summary>
        internal static string Main_LblHomeAssistantApi {
            get {
                return ResourceManager.GetString("Main_LblHomeAssistantApi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to local api:.
        /// </summary>
        internal static string Main_LblLocalApi {
            get {
                return ResourceManager.GetString("Main_LblLocalApi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mqtt:.
        /// </summary>
        internal static string Main_LblMqtt {
            get {
                return ResourceManager.GetString("Main_LblMqtt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to notification api:.
        /// </summary>
        internal static string Main_LblNotificationApi {
            get {
                return ResourceManager.GetString("Main_LblNotificationApi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to quick actions:.
        /// </summary>
        internal static string Main_LblQuickActions {
            get {
                return ResourceManager.GetString("Main_LblQuickActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to sensors:.
        /// </summary>
        internal static string Main_LblSensors {
            get {
                return ResourceManager.GetString("Main_LblSensors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to satellite service:.
        /// </summary>
        internal static string Main_LblService {
            get {
                return ResourceManager.GetString("Main_LblService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something went wrong while loading your settings.
        ///
        ///Check appsettings.json in the &apos;config&apos; subfolder, or just delete it to start fresh..
        /// </summary>
        internal static string Main_Load_MessageBox1 {
            get {
                return ResourceManager.GetString("Main_Load_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error launching HASS.Agent.
        ///Please check the logs and make a bug report on GitHub..
        /// </summary>
        internal static string Main_Load_MessageBox2 {
            get {
                return ResourceManager.GetString("Main_Load_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to about.
        /// </summary>
        internal static string Main_TsAbout {
            get {
                return ResourceManager.GetString("Main_TsAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to manage commands.
        /// </summary>
        internal static string Main_TsCommands {
            get {
                return ResourceManager.GetString("Main_TsCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to configuration.
        /// </summary>
        internal static string Main_TsConfig {
            get {
                return ResourceManager.GetString("Main_TsConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to donate.
        /// </summary>
        internal static string Main_TsDonate {
            get {
                return ResourceManager.GetString("Main_TsDonate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to exit.
        /// </summary>
        internal static string Main_TsExit {
            get {
                return ResourceManager.GetString("Main_TsExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to help &amp;&amp; contact.
        /// </summary>
        internal static string Main_TsHelp {
            get {
                return ResourceManager.GetString("Main_TsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to manage local sensors.
        /// </summary>
        internal static string Main_TsLocalSensors {
            get {
                return ResourceManager.GetString("Main_TsLocalSensors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to manage quick actions.
        /// </summary>
        internal static string Main_TsQuickItemsConfig {
            get {
                return ResourceManager.GetString("Main_TsQuickItemsConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to manage satellite service.
        /// </summary>
        internal static string Main_TsSatelliteService {
            get {
                return ResourceManager.GetString("Main_TsSatelliteService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to show hass.agent.
        /// </summary>
        internal static string Main_TsShow {
            get {
                return ResourceManager.GetString("Main_TsShow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to show quick actions.
        /// </summary>
        internal static string Main_TsShowQuickActions {
            get {
                return ResourceManager.GetString("Main_TsShowQuickActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mqtt: error while connecting.
        /// </summary>
        internal static string MqttManager_ToolTip_ConnectionError {
            get {
                return ResourceManager.GetString("MqttManager_ToolTip_ConnectionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mqtt: failed to connect.
        /// </summary>
        internal static string MqttManager_ToolTip_ConnectionFailed {
            get {
                return ResourceManager.GetString("MqttManager_ToolTip_ConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mqtt: disconnected.
        /// </summary>
        internal static string MqttManager_ToolTip_Disconnected {
            get {
                return ResourceManager.GetString("MqttManager_ToolTip_Disconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;close.
        /// </summary>
        internal static string Onboarding_BtnClose {
            get {
                return ResourceManager.GetString("Onboarding_BtnClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;next.
        /// </summary>
        internal static string Onboarding_BtnNext {
            get {
                return ResourceManager.GetString("Onboarding_BtnNext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;previous.
        /// </summary>
        internal static string Onboarding_BtnPrevious {
            get {
                return ResourceManager.GetString("Onboarding_BtnPrevious", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent Onboarding.
        /// </summary>
        internal static string Onboarding_Onboarding {
            get {
                return ResourceManager.GetString("Onboarding_Onboarding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent Onboarding.
        /// </summary>
        internal static string Onboarding_Title {
            get {
                return ResourceManager.GetString("Onboarding_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to test &amp;connection.
        /// </summary>
        internal static string OnboardingApi_BtnTest {
            get {
                return ResourceManager.GetString("OnboardingApi_BtnTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter a valid API key..
        /// </summary>
        internal static string OnboardingApi_BtnTest_MessageBox1 {
            get {
                return ResourceManager.GetString("OnboardingApi_BtnTest_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter your Home Assistant&apos;s URI..
        /// </summary>
        internal static string OnboardingApi_BtnTest_MessageBox2 {
            get {
                return ResourceManager.GetString("OnboardingApi_BtnTest_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to connect, the following error was returned:
        ///
        ///{0}.
        /// </summary>
        internal static string OnboardingApi_BtnTest_MessageBox3 {
            get {
                return ResourceManager.GetString("OnboardingApi_BtnTest_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection OK!
        ///
        ///Home Assistant version: {0}.
        /// </summary>
        internal static string OnboardingApi_BtnTest_MessageBox4 {
            get {
                return ResourceManager.GetString("OnboardingApi_BtnTest_MessageBox4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to testing ...
        /// </summary>
        internal static string OnboardingApi_BtnTest_Testing {
            get {
                return ResourceManager.GetString("OnboardingApi_BtnTest_Testing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to api &amp;token.
        /// </summary>
        internal static string OnboardingApi_LblApiToken {
            get {
                return ResourceManager.GetString("OnboardingApi_LblApiToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To learn which entities you have configured, and to send quick actions, HASS.Agent uses
        ///Home Assistant&apos;s API.
        ///
        ///Please provide a long-lived access token, and the address of your Home Assistant instance.
        ///You can get a token through your profile page. Scroll to the bottom and click &apos;CREATE TOKEN&apos;..
        /// </summary>
        internal static string OnboardingApi_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingApi_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to server &amp;uri (should be ok like this).
        /// </summary>
        internal static string OnboardingApi_LblServerUri {
            get {
                return ResourceManager.GetString("OnboardingApi_LblServerUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tip: specialized settings can be found in the Configuration window..
        /// </summary>
        internal static string OnboardingApi_LblTip1 {
            get {
                return ResourceManager.GetString("OnboardingApi_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent GitHub page.
        /// </summary>
        internal static string OnboardingDone_LblGitHub {
            get {
                return ResourceManager.GetString("OnboardingDone_LblGitHub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All done!.
        /// </summary>
        internal static string OnboardingDone_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingDone_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent will now restart to activate your configuration.
        ///
        ///
        ///If you&apos;ve enabled notifications, an elevation request will popup. This is required to allow
        ///HASS.Agent to listen on the specified port..
        /// </summary>
        internal static string OnboardingDone_LblInfo2 {
            get {
                return ResourceManager.GetString("OnboardingDone_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tip: there&apos;s a lót more to tinker with, so make sure you take a look at the configuration window!
        ///
        ///
        ///Thank you for using HASS.Agent, hopefully it&apos;ll be useful for you :-)
        ///
        ///And if you encounter any problems, please create a ticket on the GitHub page..
        /// </summary>
        internal static string OnboardingDone_LblInfo3 {
            get {
                return ResourceManager.GetString("OnboardingDone_LblInfo3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;clear.
        /// </summary>
        internal static string OnboardingHotKey_BtnClear {
            get {
                return ResourceManager.GetString("OnboardingHotKey_BtnClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;hotkey combination.
        /// </summary>
        internal static string OnboardingHotKey_LblHotkeyCombo {
            get {
                return ResourceManager.GetString("OnboardingHotKey_LblHotkeyCombo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An easy way to pull up your quick actions is to use a global hotkey.
        ///
        ///This way, whatever you&apos;re doing on your machine, you can always interact with Home Assistant.
        ///.
        /// </summary>
        internal static string OnboardingHotKey_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingHotKey_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To use notifications, you need to install and configure the HASS.Agent-notifier integration in
        ///Home Assistant.
        ///
        ///This is very easy using HACS, but you can also install manually. Visit the link below for more
        ///information..
        /// </summary>
        internal static string OnboardingIntegration_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingIntegration_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make sure you follow these steps:
        ///
        ///- Install HASS.Agent-Notifier integration
        ///- Restart Home Assistant
        ///- Configure a notifier entity
        ///- Restart Home Assistant.
        /// </summary>
        internal static string OnboardingIntegration_LblInfo2 {
            get {
                return ResourceManager.GetString("OnboardingIntegration_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent-Notifier GitHub page.
        /// </summary>
        internal static string OnboardingIntegration_LblIntegration {
            get {
                return ResourceManager.GetString("OnboardingIntegration_LblIntegration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To use notifications, you need to install and configure the HASS.Agent-notifier integration in
        ///Home Assistant.
        ///
        ///This is very easy using HACS, but you can also install manually. Visit the link below for more
        ///information..
        /// </summary>
        internal static string OnboardingIntegrations_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingIntegrations_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make sure you follow these steps:
        ///
        ///- Install the HASS.Agent-Notifier and / or HASS.Agent-MediaPlayer integration
        ///- Restart Home Assistant
        ///-Configure a notifier and / or media_player entity
        ///-Restart Home Assistant.
        /// </summary>
        internal static string OnboardingIntegrations_LblInfo2 {
            get {
                return ResourceManager.GetString("OnboardingIntegrations_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The same goes for the mediaplayer. This integration allows you to control your device as a media_player entity, see what&apos;s playing and send text-to-speech..
        /// </summary>
        internal static string OnboardingIntegrations_LblInfo3 {
            get {
                return ResourceManager.GetString("OnboardingIntegrations_LblInfo3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent-MediaPlayer GitHub page.
        /// </summary>
        internal static string OnboardingIntegrations_LblMediaPlayerIntegration {
            get {
                return ResourceManager.GetString("OnboardingIntegrations_LblMediaPlayerIntegration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent-Notifier GitHub page.
        /// </summary>
        internal static string OnboardingIntegrations_LblNotifierIntegration {
            get {
                return ResourceManager.GetString("OnboardingIntegrations_LblNotifierIntegration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to yes, &amp;enable the local api on port.
        /// </summary>
        internal static string OnboardingLocalApi_CbEnableLocalApi {
            get {
                return ResourceManager.GetString("OnboardingLocalApi_CbEnableLocalApi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to enable &amp;mediaplayer and text-to-speech.
        /// </summary>
        internal static string OnboardingLocalApi_CbEnableMediaPlayer {
            get {
                return ResourceManager.GetString("OnboardingLocalApi_CbEnableMediaPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to enable &amp;notifications.
        /// </summary>
        internal static string OnboardingLocalApi_CbEnableNotifications {
            get {
                return ResourceManager.GetString("OnboardingLocalApi_CbEnableNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent has its own internal API, so Home Assistant can send requests (like notifications or text-to-speech).
        ///
        ///Do you want to enable it?.
        /// </summary>
        internal static string OnboardingLocalApi_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingLocalApi_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can choose what modules you want to enable. They require HA integrations, but don&apos;t worry, the next page will give you more info on how to set them up..
        /// </summary>
        internal static string OnboardingLocalApi_LblInfo2 {
            get {
                return ResourceManager.GetString("OnboardingLocalApi_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: 5115 is the default port, only change it if you changed it in Home Assistant..
        /// </summary>
        internal static string OnboardingLocalApi_LblTip1 {
            get {
                return ResourceManager.GetString("OnboardingLocalApi_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to finish.
        /// </summary>
        internal static string OnboardingManager_BtnNext_Finish {
            get {
                return ResourceManager.GetString("OnboardingManager_BtnNext_Finish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to abort the onboarding process?
        ///
        ///Your progress will not be saved, and it will not be shown again on next launch..
        /// </summary>
        internal static string OnboardingManager_ConfirmBeforeClose_MessageBox1 {
            get {
                return ResourceManager.GetString("OnboardingManager_ConfirmBeforeClose_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent Onboarding: API [{0}/{1}].
        /// </summary>
        internal static string OnboardingManager_OnboardingTitle_Api {
            get {
                return ResourceManager.GetString("OnboardingManager_OnboardingTitle_Api", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent Onboarding: Completed [{0}/{1}].
        /// </summary>
        internal static string OnboardingManager_OnboardingTitle_Completed {
            get {
                return ResourceManager.GetString("OnboardingManager_OnboardingTitle_Completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent Onboarding: HotKey [{0}/{1}].
        /// </summary>
        internal static string OnboardingManager_OnboardingTitle_HotKey {
            get {
                return ResourceManager.GetString("OnboardingManager_OnboardingTitle_HotKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent Onboarding: Integration [{0}/{1}].
        /// </summary>
        internal static string OnboardingManager_OnboardingTitle_Integration {
            get {
                return ResourceManager.GetString("OnboardingManager_OnboardingTitle_Integration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent Onboarding: MQTT [{0}/{1}].
        /// </summary>
        internal static string OnboardingManager_OnboardingTitle_Mqtt {
            get {
                return ResourceManager.GetString("OnboardingManager_OnboardingTitle_Mqtt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent Onboarding: Notifications [{0}/{1}].
        /// </summary>
        internal static string OnboardingManager_OnboardingTitle_Notifications {
            get {
                return ResourceManager.GetString("OnboardingManager_OnboardingTitle_Notifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent Onboarding: Start [{0}/{1}].
        /// </summary>
        internal static string OnboardingManager_OnboardingTitle_Start {
            get {
                return ResourceManager.GetString("OnboardingManager_OnboardingTitle_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent Onboarding: Startup [{0}/{1}].
        /// </summary>
        internal static string OnboardingManager_OnboardingTitle_Startup {
            get {
                return ResourceManager.GetString("OnboardingManager_OnboardingTitle_Startup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent Onboarding: Updates [{0}/{1}].
        /// </summary>
        internal static string OnboardingManager_OnboardingTitle_Updates {
            get {
                return ResourceManager.GetString("OnboardingManager_OnboardingTitle_Updates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;TLS.
        /// </summary>
        internal static string OnboardingMqtt_CbMqttTls {
            get {
                return ResourceManager.GetString("OnboardingMqtt_CbMqttTls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to discovery prefix.
        /// </summary>
        internal static string OnboardingMqtt_LblDiscoveryPrefix {
            get {
                return ResourceManager.GetString("OnboardingMqtt_LblDiscoveryPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commands and sensors are sent through MQTT. Please provide credentials for your server.
        ///If you&apos;re using the HA addon, you can probably use the preset address.
        ///
        ///Leave empty if you&apos;re not going to use commands and sensors..
        /// </summary>
        internal static string OnboardingMqtt_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingMqtt_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ip address or hostname.
        /// </summary>
        internal static string OnboardingMqtt_LblIpAdress {
            get {
                return ResourceManager.GetString("OnboardingMqtt_LblIpAdress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to password.
        /// </summary>
        internal static string OnboardingMqtt_LblPassword {
            get {
                return ResourceManager.GetString("OnboardingMqtt_LblPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to port.
        /// </summary>
        internal static string OnboardingMqtt_LblPort {
            get {
                return ResourceManager.GetString("OnboardingMqtt_LblPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (leave default if not sure).
        /// </summary>
        internal static string OnboardingMqtt_LblTip1 {
            get {
                return ResourceManager.GetString("OnboardingMqtt_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tip: specialized settings can be found in the Configuration window..
        /// </summary>
        internal static string OnboardingMqtt_LblTip2 {
            get {
                return ResourceManager.GetString("OnboardingMqtt_LblTip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to username.
        /// </summary>
        internal static string OnboardingMqtt_LblUsername {
            get {
                return ResourceManager.GetString("OnboardingMqtt_LblUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to yes, accept notifications on port.
        /// </summary>
        internal static string OnboardingNotifications_CbAcceptNotifications {
            get {
                return ResourceManager.GetString("OnboardingNotifications_CbAcceptNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent can receive notifications from Home Assistant, using text and/or images.
        ///
        ///Do you want to enable this function?.
        /// </summary>
        internal static string OnboardingNotifications_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingNotifications_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: 5115 is the default port, only change it if you changed it in Home Assistant..
        /// </summary>
        internal static string OnboardingNotifications_LblTip1 {
            get {
                return ResourceManager.GetString("OnboardingNotifications_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch-on-login succesfully activated!.
        /// </summary>
        internal static string OnboardingStartup_Activated {
            get {
                return ResourceManager.GetString("OnboardingStartup_Activated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to activating launch-on-login, hold on ...
        /// </summary>
        internal static string OnboardingStartup_Activating {
            get {
                return ResourceManager.GetString("OnboardingStartup_Activating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch-on-login is already activated, all set!.
        /// </summary>
        internal static string OnboardingStartup_AlreadyActivated {
            get {
                return ResourceManager.GetString("OnboardingStartup_AlreadyActivated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to yes, &amp;enable launch-on-login.
        /// </summary>
        internal static string OnboardingStartup_BtnSetLaunchOnLogin {
            get {
                return ResourceManager.GetString("OnboardingStartup_BtnSetLaunchOnLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to enable launch-on-login.
        /// </summary>
        internal static string OnboardingStartup_BtnSetLaunchOnLogin_2 {
            get {
                return ResourceManager.GetString("OnboardingStartup_BtnSetLaunchOnLogin_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to enable launch-on-login now?.
        /// </summary>
        internal static string OnboardingStartup_EnableNow {
            get {
                return ResourceManager.GetString("OnboardingStartup_EnableNow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something went wrong. You can try again, or skip to the next page and retry after HASS.Agent&apos;s restart..
        /// </summary>
        internal static string OnboardingStartup_Failed {
            get {
                return ResourceManager.GetString("OnboardingStartup_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One sec, determining the current state ...
        /// </summary>
        internal static string OnboardingStartup_LblCreateInfo {
            get {
                return ResourceManager.GetString("OnboardingStartup_LblCreateInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent can launch when you login to Windows, by creating a key in your user profile&apos;s registry.
        ///
        ///You can always remove (or recreate) this key through the Configuration window..
        /// </summary>
        internal static string OnboardingStartup_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingStartup_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to yes, &amp;download and launch the installer for me.
        /// </summary>
        internal static string OnboardingUpdates_CbExecuteUpdater {
            get {
                return ResourceManager.GetString("OnboardingUpdates_CbExecuteUpdater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to yes, notify me on new &amp;updates.
        /// </summary>
        internal static string OnboardingUpdates_CbNofityOnUpdate {
            get {
                return ResourceManager.GetString("OnboardingUpdates_CbNofityOnUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you want, HASS.Agent can check for updates in the background.
        ///
        ///You&apos;ll get a notification (once per update), letting you know a new version is ready to be installed.
        ///
        ///Do you want to enable this functionality?.
        /// </summary>
        internal static string OnboardingUpdates_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingUpdates_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When there&apos;s an update, HASS.Agent will offer the option to open the release page. But if you
        ///want, HASS.Agent can also download and launch the installer for you - even less to do!
        ///
        ///The certificate of the downloaded file will get checked. And you&apos;ll still see a page with the release notes, ánd you still need to manually approve - nothing is done without your consent..
        /// </summary>
        internal static string OnboardingUpdates_LblInfo2 {
            get {
                return ResourceManager.GetString("OnboardingUpdates_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to device &amp;name.
        /// </summary>
        internal static string OnboardingWelcome_LblDeviceName {
            get {
                return ResourceManager.GetString("OnboardingWelcome_LblDeviceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It looks like this is the first time you&apos;ve launched HASS.Agent.
        ///
        ///If you want, we can go through the configuration. If not, just click &apos;close&apos;.
        ///.
        /// </summary>
        internal static string OnboardingWelcome_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingWelcome_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device name is used to identify your machine on HA. 
        ///It&apos;s also used as a suggested prefix for your commands and sensors.
        ///.
        /// </summary>
        internal static string OnboardingWelcome_LblInfo2 {
            get {
                return ResourceManager.GetString("OnboardingWelcome_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to interface &amp;language.
        /// </summary>
        internal static string OnboardingWelcome_LblInterfaceLangauge {
            get {
                return ResourceManager.GetString("OnboardingWelcome_LblInterfaceLangauge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your devicename contained some characters that aren&apos;t allowed by HA (only letters, digits and whitespace).
        ///
        ///The final name is: {0}
        ///
        ///Do you want to use that version?.
        /// </summary>
        internal static string OnboardingWelcome_Store_MessageBox1 {
            get {
                return ResourceManager.GetString("OnboardingWelcome_Store_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait a bit while the task is performed ...
        /// </summary>
        internal static string PortReservation_LblInfo1 {
            get {
                return ResourceManager.GetString("PortReservation_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create API port binding.
        /// </summary>
        internal static string PortReservation_LblTask1 {
            get {
                return ResourceManager.GetString("PortReservation_LblTask1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set firewall rule.
        /// </summary>
        internal static string PortReservation_LblTask2 {
            get {
                return ResourceManager.GetString("PortReservation_LblTask2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not all steps completed succesfully. Please consult the logs for more information..
        /// </summary>
        internal static string PortReservation_ProcessPostUpdate_MessageBox1 {
            get {
                return ResourceManager.GetString("PortReservation_ProcessPostUpdate_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent Port Reservation.
        /// </summary>
        internal static string PortReservation_Title {
            get {
                return ResourceManager.GetString("PortReservation_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait a bit while some post-update tasks are performed ...
        /// </summary>
        internal static string PostUpdate_LblInfo1 {
            get {
                return ResourceManager.GetString("PostUpdate_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuring Satellite Service.
        /// </summary>
        internal static string PostUpdate_LblTask1 {
            get {
                return ResourceManager.GetString("PostUpdate_LblTask1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create API port binding.
        /// </summary>
        internal static string PostUpdate_LblTask2 {
            get {
                return ResourceManager.GetString("PostUpdate_LblTask2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not all steps completed succesfully. Please consult the logs for more information..
        /// </summary>
        internal static string PostUpdate_ProcessPostUpdate_MessageBox1 {
            get {
                return ResourceManager.GetString("PostUpdate_ProcessPostUpdate_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent Post Update.
        /// </summary>
        internal static string PostUpdate_Title {
            get {
                return ResourceManager.GetString("PostUpdate_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to fetch your entities because of missing config, please enter the required values in the config screen..
        /// </summary>
        internal static string QuickActions_CheckHassManager_MessageBox1 {
            get {
                return ResourceManager.GetString("QuickActions_CheckHassManager_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to please wait while your entities are fetched ....
        /// </summary>
        internal static string QuickActions_LblLoading {
            get {
                return ResourceManager.GetString("QuickActions_LblLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error trying to fetch your entities..
        /// </summary>
        internal static string QuickActions_MessageBox_EntityFailed {
            get {
                return ResourceManager.GetString("QuickActions_MessageBox_EntityFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quick Actions.
        /// </summary>
        internal static string QuickActions_Title {
            get {
                return ResourceManager.GetString("QuickActions_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;add new.
        /// </summary>
        internal static string QuickActionsConfig_BtnAdd {
            get {
                return ResourceManager.GetString("QuickActionsConfig_BtnAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;modify.
        /// </summary>
        internal static string QuickActionsConfig_BtnModify {
            get {
                return ResourceManager.GetString("QuickActionsConfig_BtnModify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;preview.
        /// </summary>
        internal static string QuickActionsConfig_BtnPreview {
            get {
                return ResourceManager.GetString("QuickActionsConfig_BtnPreview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;remove.
        /// </summary>
        internal static string QuickActionsConfig_BtnRemove {
            get {
                return ResourceManager.GetString("QuickActionsConfig_BtnRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;store quick actions.
        /// </summary>
        internal static string QuickActionsConfig_BtnStore {
            get {
                return ResourceManager.GetString("QuickActionsConfig_BtnStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to action.
        /// </summary>
        internal static string QuickActionsConfig_ClmAction {
            get {
                return ResourceManager.GetString("QuickActionsConfig_ClmAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to description.
        /// </summary>
        internal static string QuickActionsConfig_ClmDescription {
            get {
                return ResourceManager.GetString("QuickActionsConfig_ClmDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to domain.
        /// </summary>
        internal static string QuickActionsConfig_ClmDomain {
            get {
                return ResourceManager.GetString("QuickActionsConfig_ClmDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to entity.
        /// </summary>
        internal static string QuickActionsConfig_ClmEntity {
            get {
                return ResourceManager.GetString("QuickActionsConfig_ClmEntity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to hotkey.
        /// </summary>
        internal static string QuickActionsConfig_ClmHotKey {
            get {
                return ResourceManager.GetString("QuickActionsConfig_ClmHotKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to hotkey enabled.
        /// </summary>
        internal static string QuickActionsConfig_LblHotkey {
            get {
                return ResourceManager.GetString("QuickActionsConfig_LblHotkey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quick Actions Config.
        /// </summary>
        internal static string QuickActionsConfig_Title {
            get {
                return ResourceManager.GetString("QuickActionsConfig_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;store quick action.
        /// </summary>
        internal static string QuickActionsMod_BtnStore {
            get {
                return ResourceManager.GetString("QuickActionsMod_BtnStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select an entity first..
        /// </summary>
        internal static string QuickActionsMod_BtnStore_MessageBox1 {
            get {
                return ResourceManager.GetString("QuickActionsMod_BtnStore_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a domain first..
        /// </summary>
        internal static string QuickActionsMod_BtnStore_MessageBox2 {
            get {
                return ResourceManager.GetString("QuickActionsMod_BtnStore_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown action, please select a valid one..
        /// </summary>
        internal static string QuickActionsMod_BtnStore_MessageBox3 {
            get {
                return ResourceManager.GetString("QuickActionsMod_BtnStore_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to enable hotkey.
        /// </summary>
        internal static string QuickActionsMod_CbEnableHotkey {
            get {
                return ResourceManager.GetString("QuickActionsMod_CbEnableHotkey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to fetch your entities because of missing config, please enter the required values in the config screen..
        /// </summary>
        internal static string QuickActionsMod_CheckHassManager_MessageBox1 {
            get {
                return ResourceManager.GetString("QuickActionsMod_CheckHassManager_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to desired &amp;action.
        /// </summary>
        internal static string QuickActionsMod_LblAction {
            get {
                return ResourceManager.GetString("QuickActionsMod_LblAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;description.
        /// </summary>
        internal static string QuickActionsMod_LblDescription {
            get {
                return ResourceManager.GetString("QuickActionsMod_LblDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to domain.
        /// </summary>
        internal static string QuickActionsMod_LblDomain {
            get {
                return ResourceManager.GetString("QuickActionsMod_LblDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;entity.
        /// </summary>
        internal static string QuickActionsMod_LblEntityInfo {
            get {
                return ResourceManager.GetString("QuickActionsMod_LblEntityInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;hotkey combination.
        /// </summary>
        internal static string QuickActionsMod_LblHotkey {
            get {
                return ResourceManager.GetString("QuickActionsMod_LblHotkey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to please wait while your entities are fetched ....
        /// </summary>
        internal static string QuickActionsMod_LblLoading {
            get {
                return ResourceManager.GetString("QuickActionsMod_LblLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (optional, will be used instead of entity name).
        /// </summary>
        internal static string QuickActionsMod_LblTip1 {
            get {
                return ResourceManager.GetString("QuickActionsMod_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error trying to fetch your entities..
        /// </summary>
        internal static string QuickActionsMod_MessageBox_Entities {
            get {
                return ResourceManager.GetString("QuickActionsMod_MessageBox_Entities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quick Action.
        /// </summary>
        internal static string QuickActionsMod_Title {
            get {
                return ResourceManager.GetString("QuickActionsMod_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod Quick Action.
        /// </summary>
        internal static string QuickActionsMod_Title_Mod {
            get {
                return ResourceManager.GetString("QuickActionsMod_Title_Mod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Quick Action.
        /// </summary>
        internal static string QuickActionsMod_Title_New {
            get {
                return ResourceManager.GetString("QuickActionsMod_Title_New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait a bit while HASS.Agent restarts ...
        /// </summary>
        internal static string Restart_LblInfo1 {
            get {
                return ResourceManager.GetString("Restart_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for previous instance to close.
        /// </summary>
        internal static string Restart_LblTask1 {
            get {
                return ResourceManager.GetString("Restart_LblTask1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Relaunch HASS.Agent.
        /// </summary>
        internal static string Restart_LblTask2 {
            get {
                return ResourceManager.GetString("Restart_LblTask2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent is still active after {0} seconds. Please close all instances and restart manually.
        ///
        ///Check the logs for more info, and optionally inform the developers..
        /// </summary>
        internal static string Restart_ProcessRestart_MessageBox1 {
            get {
                return ResourceManager.GetString("Restart_ProcessRestart_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent Restarter.
        /// </summary>
        internal static string Restart_Title {
            get {
                return ResourceManager.GetString("Restart_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;add new.
        /// </summary>
        internal static string SensorsConfig_BtnAdd {
            get {
                return ResourceManager.GetString("SensorsConfig_BtnAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;modify.
        /// </summary>
        internal static string SensorsConfig_BtnModify {
            get {
                return ResourceManager.GetString("SensorsConfig_BtnModify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;remove.
        /// </summary>
        internal static string SensorsConfig_BtnRemove {
            get {
                return ResourceManager.GetString("SensorsConfig_BtnRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;store and activate sensors.
        /// </summary>
        internal static string SensorsConfig_BtnStore {
            get {
                return ResourceManager.GetString("SensorsConfig_BtnStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while saving the sensors, check the logs for more info..
        /// </summary>
        internal static string SensorsConfig_BtnStore_MessageBox1 {
            get {
                return ResourceManager.GetString("SensorsConfig_BtnStore_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to storing and registering, please wait .. .
        /// </summary>
        internal static string SensorsConfig_BtnStore_Storing {
            get {
                return ResourceManager.GetString("SensorsConfig_BtnStore_Storing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to name.
        /// </summary>
        internal static string SensorsConfig_ClmName {
            get {
                return ResourceManager.GetString("SensorsConfig_ClmName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to type.
        /// </summary>
        internal static string SensorsConfig_ClmType {
            get {
                return ResourceManager.GetString("SensorsConfig_ClmType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to last known value.
        /// </summary>
        internal static string SensorsConfig_ClmValue {
            get {
                return ResourceManager.GetString("SensorsConfig_ClmValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to refresh.
        /// </summary>
        internal static string SensorsConfig_LblRefresh {
            get {
                return ResourceManager.GetString("SensorsConfig_LblRefresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sensors Config.
        /// </summary>
        internal static string SensorsConfig_Title {
            get {
                return ResourceManager.GetString("SensorsConfig_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides the title of the current active window..
        /// </summary>
        internal static string SensorsManager_ActiveWindowSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_ActiveWindowSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides information various aspects of your device&apos;s audio:
        ///
        ///Current peak volume level (can be used as a simple &apos;is something playing&apos; value).
        ///
        ///Default audiodevice: name, state and volume.
        ///
        ///Summary of your audio sessions: application name, muted state, volume and current peak volume..
        /// </summary>
        internal static string SensorsManager_AudioSensorsDescription {
            get {
                return ResourceManager.GetString("SensorsManager_AudioSensorsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides a sensor with the current charging status, estimated amount of minutes on a full charge, remaining charge as a percentage, remaining charge in minutes and the powerline status..
        /// </summary>
        internal static string SensorsManager_BatterySensorsDescription {
            get {
                return ResourceManager.GetString("SensorsManager_BatterySensorsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides the current load of the first CPU as a percentage..
        /// </summary>
        internal static string SensorsManager_CpuLoadSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_CpuLoadSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides the current clockspeed of the first CPU..
        /// </summary>
        internal static string SensorsManager_CurrentClockSpeedSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_CurrentClockSpeedSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides the current volume level as a percentage.
        ///
        ///Currently takes the volume of your default device..
        /// </summary>
        internal static string SensorsManager_CurrentVolumeSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_CurrentVolumeSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides a sensor with the amount of displays, name of the primary display, and per display its name, resolution and bits per pixel..
        /// </summary>
        internal static string SensorsManager_DisplaySensorsDescription {
            get {
                return ResourceManager.GetString("SensorsManager_DisplaySensorsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dummy sensor for testing purposes, sends a random integer value between 0 and 100..
        /// </summary>
        internal static string SensorsManager_DummySensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_DummySensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides the current load of the first GPU as a percentage..
        /// </summary>
        internal static string SensorsManager_GpuLoadSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_GpuLoadSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides the current temperature of the first GPU..
        /// </summary>
        internal static string SensorsManager_GpuTemperatureSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_GpuTemperatureSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides a datetime value containing the last moment the user provided any input..
        /// </summary>
        internal static string SensorsManager_LastActiveSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_LastActiveSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides a datetime value containing the last moment the system (re)booted.
        ///
        ///Important: Windows&apos; FastBoot option can throw this value off, because that&apos;s a form of hibernation. You can disable it through Power Options -&gt; &apos;Choose what the power buttons do&apos; -&gt; uncheck &apos;Turn on fast start-up&apos;. It doesn&apos;t make much difference for modern machines with SSDs, but disabling makes sure you get a clean state after rebooting..
        /// </summary>
        internal static string SensorsManager_LastBootSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_LastBootSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides the last system state change:
        ///
        ///ApplicationStarted, Logoff, SystemShutdown, Resume, Suspend, ConsoleConnect, ConsoleDisconnect, RemoteConnect, RemoteDisconnect, SessionLock, SessionLogoff, SessionLogon, SessionRemoteControl and SessionUnlock..
        /// </summary>
        internal static string SensorsManager_LastSystemStateChangeSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_LastSystemStateChangeSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns the name of the currently logged user..
        /// </summary>
        internal static string SensorsManager_LoggedUserSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_LoggedUserSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns a json-formatted list of currently logged users..
        /// </summary>
        internal static string SensorsManager_LoggedUsersSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_LoggedUsersSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides the amount of used memory as a percentage..
        /// </summary>
        internal static string SensorsManager_MemoryUsageSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_MemoryUsageSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides a bool value based on whether the microphone is currently being used..
        /// </summary>
        internal static string SensorsManager_MicrophoneActiveSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_MicrophoneActiveSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides an ON/OFF value based on whether the window is currently open (doesn&apos;t have to be active)..
        /// </summary>
        internal static string SensorsManager_NamedWindowSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_NamedWindowSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides card info, configuration, transfer- &amp; package statistics and addresses (ip, mac, dhcp, dns) of the selected network card(s).
        ///
        ///This is a multi-value sensor..
        /// </summary>
        internal static string SensorsManager_NetworkSensorsDescription {
            get {
                return ResourceManager.GetString("SensorsManager_NetworkSensorsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides the values of a performance counter.
        ///
        ///For example, the built-in CPU load sensor uses these values:
        ///
        ///Category: Processor
        ///Counter: % Processor Time
        ///Instance: _Total
        ///
        ///You can explore the counters through Windows&apos; &apos;perfmon.exe&apos; tool..
        /// </summary>
        internal static string SensorsManager_PerformanceCounterSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_PerformanceCounterSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides the number of active instances of the process..
        /// </summary>
        internal static string SensorsManager_ProcessActiveSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_ProcessActiveSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns the state of the provided service: NotFound, Stopped, StartPending, StopPending, Running, ContinuePending, PausePending or Paused.
        ///
        ///Make sure to provide the &apos;Service name&apos;, not the &apos;Display name&apos;..
        /// </summary>
        internal static string SensorsManager_ServiceStateSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_ServiceStateSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides the current session state:
        ///
        ///Locked, Unlocked or Unknown.
        ///
        ///Use a LastSystemStateChangeSensor to monitor session state changes..
        /// </summary>
        internal static string SensorsManager_SessionStateSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_SessionStateSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides the labels, total size (MB), available space (MB), used space (MB) and file system of all present non-removable disks..
        /// </summary>
        internal static string SensorsManager_StorageSensorsDescription {
            get {
                return ResourceManager.GetString("SensorsManager_StorageSensorsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides the current user state:
        ///
        ///NotPresent, Busy, RunningDirect3dFullScreen, PresentationMode, AcceptsNotifications, QuietTime or RunningWindowsStoreApp.
        ///
        ///Can for instance be used to determine whether to send notifications or TTS messages..
        /// </summary>
        internal static string SensorsManager_UserNotificationStateSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_UserNotificationStateSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides a bool value based on whether the webcam is currently being used..
        /// </summary>
        internal static string SensorsManager_WebcamActiveSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_WebcamActiveSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides a sensor with the amount of pending driver updates and a sensor with the amount of pending software updates.
        ///
        ///This is a costly request, so the recommended interval is 15 minutes (900 seconds). But it&apos;s capped at 10 minutes, if you provide a lower value, you&apos;ll get the last known list..
        /// </summary>
        internal static string SensorsManager_WindowsUpdatesSensorsDescription {
            get {
                return ResourceManager.GetString("SensorsManager_WindowsUpdatesSensorsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides the result of the WMI query..
        /// </summary>
        internal static string SensorsManager_WmiQuerySensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_WmiQuerySensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        internal static string SensorsMod_All {
            get {
                return ResourceManager.GetString("SensorsMod_All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;store sensor.
        /// </summary>
        internal static string SensorsMod_BtnStore {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a sensortype first..
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox1 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the name of a process first..
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox10 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the name of a service first..
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox11 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a valid sensortype first..
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox2 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a name first..
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox3 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There&apos;s already a single-value sensor with that name. Are you sure you want to continue?.
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox4 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There&apos;s already a multi-value sensor with that name. Are you sure you want to continue?.
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox5 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter an interval between 1 and 43200 (12 hours) first..
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox6 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a window name first..
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox7 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a query first..
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox8 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a category and instance first..
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox9 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;test.
        /// </summary>
        internal static string SensorsMod_BtnTest {
            get {
                return ResourceManager.GetString("SensorsMod_BtnTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to test performance counter.
        /// </summary>
        internal static string SensorsMod_BtnTest_PerformanceCounter {
            get {
                return ResourceManager.GetString("SensorsMod_BtnTest_PerformanceCounter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to test wmi query.
        /// </summary>
        internal static string SensorsMod_BtnTest_Wmi {
            get {
                return ResourceManager.GetString("SensorsMod_BtnTest_Wmi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   type.
        /// </summary>
        internal static string SensorsMod_ClmSensorName {
            get {
                return ResourceManager.GetString("SensorsMod_ClmSensorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to agent.
        /// </summary>
        internal static string SensorsMod_LblAgent {
            get {
                return ResourceManager.GetString("SensorsMod_LblAgent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to description.
        /// </summary>
        internal static string SensorsMod_LblDescription {
            get {
                return ResourceManager.GetString("SensorsMod_LblDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to multivalue.
        /// </summary>
        internal static string SensorsMod_LblMultiValue {
            get {
                return ResourceManager.GetString("SensorsMod_LblMultiValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;name.
        /// </summary>
        internal static string SensorsMod_LblName {
            get {
                return ResourceManager.GetString("SensorsMod_LblName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to seconds.
        /// </summary>
        internal static string SensorsMod_LblSeconds {
            get {
                return ResourceManager.GetString("SensorsMod_LblSeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to service.
        /// </summary>
        internal static string SensorsMod_LblService {
            get {
                return ResourceManager.GetString("SensorsMod_LblService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to setting 1.
        /// </summary>
        internal static string SensorsMod_LblSetting1 {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to category.
        /// </summary>
        internal static string SensorsMod_LblSetting1_Category {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting1_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to network card.
        /// </summary>
        internal static string SensorsMod_LblSetting1_Network {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting1_Network", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to process.
        /// </summary>
        internal static string SensorsMod_LblSetting1_Process {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting1_Process", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to service.
        /// </summary>
        internal static string SensorsMod_LblSetting1_Service {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting1_Service", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to window name.
        /// </summary>
        internal static string SensorsMod_LblSetting1_WindowName {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting1_WindowName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to wmi query.
        /// </summary>
        internal static string SensorsMod_LblSetting1_Wmi {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting1_Wmi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to setting 2.
        /// </summary>
        internal static string SensorsMod_LblSetting2 {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to counter.
        /// </summary>
        internal static string SensorsMod_LblSetting2_Counter {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting2_Counter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to wmi scope (optional).
        /// </summary>
        internal static string SensorsMod_LblSetting2_Wmi {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting2_Wmi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to setting 3.
        /// </summary>
        internal static string SensorsMod_LblSetting3 {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to instance (optional).
        /// </summary>
        internal static string SensorsMod_LblSetting3_Instance {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting3_Instance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to hass.agent only!.
        /// </summary>
        internal static string SensorsMod_LblSpecificClient {
            get {
                return ResourceManager.GetString("SensorsMod_LblSpecificClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to selected type.
        /// </summary>
        internal static string SensorsMod_LblType {
            get {
                return ResourceManager.GetString("SensorsMod_LblType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;update every.
        /// </summary>
        internal static string SensorsMod_LblUpdate {
            get {
                return ResourceManager.GetString("SensorsMod_LblUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} only!.
        /// </summary>
        internal static string SensorsMod_SpecificClient {
            get {
                return ResourceManager.GetString("SensorsMod_SpecificClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a category and counter first..
        /// </summary>
        internal static string SensorsMod_TestPerformanceCounter_MessageBox1 {
            get {
                return ResourceManager.GetString("SensorsMod_TestPerformanceCounter_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test succesfully executed, result value:
        ///
        ///{0}.
        /// </summary>
        internal static string SensorsMod_TestPerformanceCounter_MessageBox2 {
            get {
                return ResourceManager.GetString("SensorsMod_TestPerformanceCounter_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The test failed to execute:
        ///
        ///{0}
        ///
        ///Do you want to open the logs folder?.
        /// </summary>
        internal static string SensorsMod_TestPerformanceCounter_MessageBox3 {
            get {
                return ResourceManager.GetString("SensorsMod_TestPerformanceCounter_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a WMI query first..
        /// </summary>
        internal static string SensorsMod_TestWmi_MessageBox1 {
            get {
                return ResourceManager.GetString("SensorsMod_TestWmi_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Query succesfully executed, result value:
        ///
        ///{0}.
        /// </summary>
        internal static string SensorsMod_TestWmi_MessageBox2 {
            get {
                return ResourceManager.GetString("SensorsMod_TestWmi_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The query failed to execute:
        ///
        ///{0}
        ///
        ///Do you want to open the logs folder?.
        /// </summary>
        internal static string SensorsMod_TestWmi_MessageBox3 {
            get {
                return ResourceManager.GetString("SensorsMod_TestWmi_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sensor.
        /// </summary>
        internal static string SensorsMod_Title {
            get {
                return ResourceManager.GetString("SensorsMod_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod Sensor.
        /// </summary>
        internal static string SensorsMod_Title_Mod {
            get {
                return ResourceManager.GetString("SensorsMod_Title_Mod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Sensor.
        /// </summary>
        internal static string SensorsMod_Title_New {
            get {
                return ResourceManager.GetString("SensorsMod_Title_New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It looks like your scope is malformed. It should probably start like this:
        ///
        ///\\.\ROOT\
        ///
        ///The scope you entered:
        ///
        ///{0}
        ///
        ///Tip: make sure you haven&apos;t switched the scope and query fields around.
        ///
        ///Do you still want to use the current values?.
        /// </summary>
        internal static string SensorsMod_WmiTestFailed {
            get {
                return ResourceManager.GetString("SensorsMod_WmiTestFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ActiveWindow.
        /// </summary>
        internal static string SensorType_ActiveWindowSensor {
            get {
                return ResourceManager.GetString("SensorType_ActiveWindowSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audio.
        /// </summary>
        internal static string SensorType_AudioSensors {
            get {
                return ResourceManager.GetString("SensorType_AudioSensors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Battery.
        /// </summary>
        internal static string SensorType_BatterySensors {
            get {
                return ResourceManager.GetString("SensorType_BatterySensors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CpuLoad.
        /// </summary>
        internal static string SensorType_CpuLoadSensor {
            get {
                return ResourceManager.GetString("SensorType_CpuLoadSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CurrentClockSpeed.
        /// </summary>
        internal static string SensorType_CurrentClockSpeedSensor {
            get {
                return ResourceManager.GetString("SensorType_CurrentClockSpeedSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CurrentVolume.
        /// </summary>
        internal static string SensorType_CurrentVolumeSensor {
            get {
                return ResourceManager.GetString("SensorType_CurrentVolumeSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display.
        /// </summary>
        internal static string SensorType_DisplaySensors {
            get {
                return ResourceManager.GetString("SensorType_DisplaySensors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dummy.
        /// </summary>
        internal static string SensorType_DummySensor {
            get {
                return ResourceManager.GetString("SensorType_DummySensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GeoLocation.
        /// </summary>
        internal static string SensorType_GeoLocationSensor {
            get {
                return ResourceManager.GetString("SensorType_GeoLocationSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GpuLoad.
        /// </summary>
        internal static string SensorType_GpuLoadSensor {
            get {
                return ResourceManager.GetString("SensorType_GpuLoadSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GpuTemperature.
        /// </summary>
        internal static string SensorType_GpuTemperatureSensor {
            get {
                return ResourceManager.GetString("SensorType_GpuTemperatureSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LastActive.
        /// </summary>
        internal static string SensorType_LastActiveSensor {
            get {
                return ResourceManager.GetString("SensorType_LastActiveSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LastBoot.
        /// </summary>
        internal static string SensorType_LastBootSensor {
            get {
                return ResourceManager.GetString("SensorType_LastBootSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LastSystemStateChange.
        /// </summary>
        internal static string SensorType_LastSystemStateChangeSensor {
            get {
                return ResourceManager.GetString("SensorType_LastSystemStateChangeSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LoggedUser.
        /// </summary>
        internal static string SensorType_LoggedUserSensor {
            get {
                return ResourceManager.GetString("SensorType_LoggedUserSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LoggedUsers.
        /// </summary>
        internal static string SensorType_LoggedUsersSensor {
            get {
                return ResourceManager.GetString("SensorType_LoggedUsersSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MemoryUsage.
        /// </summary>
        internal static string SensorType_MemoryUsageSensor {
            get {
                return ResourceManager.GetString("SensorType_MemoryUsageSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MicrophoneActive.
        /// </summary>
        internal static string SensorType_MicrophoneActiveSensor {
            get {
                return ResourceManager.GetString("SensorType_MicrophoneActiveSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NamedWindow.
        /// </summary>
        internal static string SensorType_NamedWindowSensor {
            get {
                return ResourceManager.GetString("SensorType_NamedWindowSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network.
        /// </summary>
        internal static string SensorType_NetworkSensors {
            get {
                return ResourceManager.GetString("SensorType_NetworkSensors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PerformanceCounter.
        /// </summary>
        internal static string SensorType_PerformanceCounterSensor {
            get {
                return ResourceManager.GetString("SensorType_PerformanceCounterSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ProcessActive.
        /// </summary>
        internal static string SensorType_ProcessActiveSensor {
            get {
                return ResourceManager.GetString("SensorType_ProcessActiveSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ServiceState.
        /// </summary>
        internal static string SensorType_ServiceStateSensor {
            get {
                return ResourceManager.GetString("SensorType_ServiceStateSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SessionState.
        /// </summary>
        internal static string SensorType_SessionStateSensor {
            get {
                return ResourceManager.GetString("SensorType_SessionStateSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Storage.
        /// </summary>
        internal static string SensorType_StorageSensors {
            get {
                return ResourceManager.GetString("SensorType_StorageSensors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UserNotification.
        /// </summary>
        internal static string SensorType_UserNotificationStateSensor {
            get {
                return ResourceManager.GetString("SensorType_UserNotificationStateSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WebcamActive.
        /// </summary>
        internal static string SensorType_WebcamActiveSensor {
            get {
                return ResourceManager.GetString("SensorType_WebcamActiveSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WindowsUpdates.
        /// </summary>
        internal static string SensorType_WindowsUpdatesSensors {
            get {
                return ResourceManager.GetString("SensorType_WindowsUpdatesSensors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WmiQuery.
        /// </summary>
        internal static string SensorType_WmiQuerySensor {
            get {
                return ResourceManager.GetString("SensorType_WmiQuerySensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;add new.
        /// </summary>
        internal static string ServiceCommands_BtnAdd {
            get {
                return ResourceManager.GetString("ServiceCommands_BtnAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;modify.
        /// </summary>
        internal static string ServiceCommands_BtnModify {
            get {
                return ResourceManager.GetString("ServiceCommands_BtnModify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;remove.
        /// </summary>
        internal static string ServiceCommands_BtnRemove {
            get {
                return ResourceManager.GetString("ServiceCommands_BtnRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;send and activate commands.
        /// </summary>
        internal static string ServiceCommands_BtnStore {
            get {
                return ResourceManager.GetString("ServiceCommands_BtnStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while saving the commands, check the logs for more info..
        /// </summary>
        internal static string ServiceCommands_BtnStore_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceCommands_BtnStore_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to storing and registering, please wait .. .
        /// </summary>
        internal static string ServiceCommands_BtnStore_Storing {
            get {
                return ResourceManager.GetString("ServiceCommands_BtnStore_Storing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to name.
        /// </summary>
        internal static string ServiceCommands_ClmName {
            get {
                return ResourceManager.GetString("ServiceCommands_ClmName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to type.
        /// </summary>
        internal static string ServiceCommands_ClmType {
            get {
                return ResourceManager.GetString("ServiceCommands_ClmType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to low integrity.
        /// </summary>
        internal static string ServiceCommands_LblLowIntegrity {
            get {
                return ResourceManager.GetString("ServiceCommands_LblLowIntegrity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to commands stored!.
        /// </summary>
        internal static string ServiceCommands_LblStored {
            get {
                return ResourceManager.GetString("ServiceCommands_LblStored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to      Commands     .
        /// </summary>
        internal static string ServiceConfig_TabCommands {
            get {
                return ResourceManager.GetString("ServiceConfig_TabCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to      General     .
        /// </summary>
        internal static string ServiceConfig_TabGeneral {
            get {
                return ResourceManager.GetString("ServiceConfig_TabGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to      MQTT     .
        /// </summary>
        internal static string ServiceConfig_TabMqtt {
            get {
                return ResourceManager.GetString("ServiceConfig_TabMqtt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to      Sensors     .
        /// </summary>
        internal static string ServiceConfig_TabSensors {
            get {
                return ResourceManager.GetString("ServiceConfig_TabSensors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Satellite Service Config.
        /// </summary>
        internal static string ServiceConfig_Title {
            get {
                return ResourceManager.GetString("ServiceConfig_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;apply.
        /// </summary>
        internal static string ServiceConnect_BtnRetryAuthId {
            get {
                return ResourceManager.GetString("ServiceConnect_BtnRetryAuthId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to fetching configured commands failed.
        /// </summary>
        internal static string ServiceConnect_CommandsFailed {
            get {
                return ResourceManager.GetString("ServiceConnect_CommandsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service returned an error while requesting its configured commands. Check the logs for more info.
        ///
        ///You can open the logs and manage the service from the configuration panel..
        /// </summary>
        internal static string ServiceConnect_CommandsFailedMessage {
            get {
                return ResourceManager.GetString("ServiceConnect_CommandsFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to communicating with the service has failed.
        /// </summary>
        internal static string ServiceConnect_CommunicationFailed {
            get {
                return ResourceManager.GetString("ServiceConnect_CommunicationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to communicate with the service. Check the logs for more info.
        ///
        ///You can open the logs and manage the service from the configuration panel..
        /// </summary>
        internal static string ServiceConnect_CommunicationFailedMessage {
            get {
                return ResourceManager.GetString("ServiceConnect_CommunicationFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to connecting with the satellite service, one moment please ...
        /// </summary>
        internal static string ServiceConnect_Connecting {
            get {
                return ResourceManager.GetString("ServiceConnect_Connecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to connecting to the service has failed.
        /// </summary>
        internal static string ServiceConnect_Failed {
            get {
                return ResourceManager.GetString("ServiceConnect_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service hasn&apos;t been found! You can install and manage it from the configuration panel.
        ///
        ///When it&apos;s up and running, come back here to configure the commands and sensors..
        /// </summary>
        internal static string ServiceConnect_FailedMessage {
            get {
                return ResourceManager.GetString("ServiceConnect_FailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authenticate.
        /// </summary>
        internal static string ServiceConnect_LblAuthenticate {
            get {
                return ResourceManager.GetString("ServiceConnect_LblAuthenticate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect with service.
        /// </summary>
        internal static string ServiceConnect_LblConnect {
            get {
                return ResourceManager.GetString("ServiceConnect_LblConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fetch configuration.
        /// </summary>
        internal static string ServiceConnect_LblFetchConfig {
            get {
                return ResourceManager.GetString("ServiceConnect_LblFetchConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to connecting with the satellite service, one moment please ...
        /// </summary>
        internal static string ServiceConnect_LblLoading {
            get {
                return ResourceManager.GetString("ServiceConnect_LblLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to auth &amp;id.
        /// </summary>
        internal static string ServiceConnect_LblRetryAuthId {
            get {
                return ResourceManager.GetString("ServiceConnect_LblRetryAuthId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to fetching mqtt settings failed.
        /// </summary>
        internal static string ServiceConnect_MqttFailed {
            get {
                return ResourceManager.GetString("ServiceConnect_MqttFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service returned an error while requesting its MQTT settings. Check the logs for more info.
        ///
        ///You can open the logs and manage the service from the configuration panel..
        /// </summary>
        internal static string ServiceConnect_MqttFailedMessage {
            get {
                return ResourceManager.GetString("ServiceConnect_MqttFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to fetching configured sensors failed.
        /// </summary>
        internal static string ServiceConnect_SensorsFailed {
            get {
                return ResourceManager.GetString("ServiceConnect_SensorsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service returned an error while requesting its configured sensors. Check the logs for more info.
        ///
        ///You can open the logs and manage the service from the configuration panel..
        /// </summary>
        internal static string ServiceConnect_SensorsFailedMessage {
            get {
                return ResourceManager.GetString("ServiceConnect_SensorsFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to fetching settings failed.
        /// </summary>
        internal static string ServiceConnect_SettingsFailed {
            get {
                return ResourceManager.GetString("ServiceConnect_SettingsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service returned an error while requesting its settings. Check the logs for more info.
        ///
        ///You can open the logs and manage the service from the configuration panel..
        /// </summary>
        internal static string ServiceConnect_SettingsFailedMessage {
            get {
                return ResourceManager.GetString("ServiceConnect_SettingsFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to unauthorized.
        /// </summary>
        internal static string ServiceConnect_Unauthorized {
            get {
                return ResourceManager.GetString("ServiceConnect_Unauthorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are not authorized to contact the service.
        ///
        ///If you have the correct auth ID, you can set it now and try again..
        /// </summary>
        internal static string ServiceConnect_UnauthorizedMessage {
            get {
                return ResourceManager.GetString("ServiceConnect_UnauthorizedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to apply.
        /// </summary>
        internal static string ServiceGeneral_Apply {
            get {
                return ResourceManager.GetString("ServiceGeneral_Apply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select an executor first (tip: doubleclick to browse)..
        /// </summary>
        internal static string ServiceGeneral_BtnStoreCustomExecutor_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceGeneral_BtnStoreCustomExecutor_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected executor isn&apos;t found. Please select a new one..
        /// </summary>
        internal static string ServiceGeneral_BtnStoreCustomExecutor_MessageBox2 {
            get {
                return ResourceManager.GetString("ServiceGeneral_BtnStoreCustomExecutor_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter a devicename first..
        /// </summary>
        internal static string ServiceGeneral_BtnStoreDeviceName_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceGeneral_BtnStoreDeviceName_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to auth &amp;id.
        /// </summary>
        internal static string ServiceGeneral_LblAuthId {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblAuthId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set an auth ID if you don&apos;t want every instance of HASS.Agent on this PC to connect with the satellite service.
        ///
        ///Only the instances that have the correct ID, can connect.
        ///
        ///Leave empty to allow all to connect..
        /// </summary>
        internal static string ServiceGeneral_LblAuthIdInfo_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblAuthIdInfo_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to stored!.
        /// </summary>
        internal static string ServiceGeneral_LblAuthStored {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblAuthStored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to custom executor &amp;binary.
        /// </summary>
        internal static string ServiceGeneral_LblCustomExecBinary {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblCustomExecBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to custom &amp;executor name.
        /// </summary>
        internal static string ServiceGeneral_LblCustomExecName {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblCustomExecName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to device &amp;name.
        /// </summary>
        internal static string ServiceGeneral_LblDeviceName {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblDeviceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the name with which the satellite service registers itself on Home Assistant.
        ///
        ///By default, it&apos;s your PC&apos;s name plus &apos;-satellite&apos;..
        /// </summary>
        internal static string ServiceGeneral_LblDeviceNameInfo_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblDeviceNameInfo_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to disconnected &amp;grace period.
        /// </summary>
        internal static string ServiceGeneral_LblDisconGrace {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblDisconGrace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of time the satellite service will wait before reporting a lost connection to the MQTT broker..
        /// </summary>
        internal static string ServiceGeneral_LblDisconGraceInfo_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblDisconGraceInfo_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This page contains general configuration items. For MQTT settings, sensors and commands, browse the tabs on top..
        /// </summary>
        internal static string ServiceGeneral_LblInfo1 {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the satellite service to run sensors and commands without having to be logged in. Not all types are available, for instance the &apos;LaunchUrl&apos; command can only be added as a regular command..
        /// </summary>
        internal static string ServiceGeneral_LblInfo2 {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to seconds.
        /// </summary>
        internal static string ServiceGeneral_LblSeconds {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblSeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to tip: doubleclick to browse.
        /// </summary>
        internal static string ServiceGeneral_LblTip1 {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to tip: doubleclick to generate random.
        /// </summary>
        internal static string ServiceGeneral_LblTip2 {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblTip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to version.
        /// </summary>
        internal static string ServiceGeneral_LblVersionInfo {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblVersionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while saving, check the logs for more info..
        /// </summary>
        internal static string ServiceGeneral_SavingFailedMessageBox {
            get {
                return ResourceManager.GetString("ServiceGeneral_SavingFailedMessageBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to stored!.
        /// </summary>
        internal static string ServiceGeneral_Stored {
            get {
                return ResourceManager.GetString("ServiceGeneral_Stored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Storing an empty auth ID will allow all HASS.Agent to access the service.
        ///
        ///Are you sure you want this?.
        /// </summary>
        internal static string ServiceGeneral_TbAuthId_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceGeneral_TbAuthId_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to copy from &amp;hass.agent.
        /// </summary>
        internal static string ServiceMqtt_BtnCopy {
            get {
                return ResourceManager.GetString("ServiceMqtt_BtnCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;clear config.
        /// </summary>
        internal static string ServiceMqtt_BtnMqttClearConfig {
            get {
                return ResourceManager.GetString("ServiceMqtt_BtnMqttClearConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;send and activate config.
        /// </summary>
        internal static string ServiceMqtt_BtnStore {
            get {
                return ResourceManager.GetString("ServiceMqtt_BtnStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while saving the configuration, check the logs for more info..
        /// </summary>
        internal static string ServiceMqtt_BtnStore_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceMqtt_BtnStore_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to storing and registering, please wait .. .
        /// </summary>
        internal static string ServiceMqtt_BtnStore_Storing {
            get {
                return ResourceManager.GetString("ServiceMqtt_BtnStore_Storing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;allow untrusted certificates.
        /// </summary>
        internal static string ServiceMqtt_CbAllowUntrustedCertificates {
            get {
                return ResourceManager.GetString("ServiceMqtt_CbAllowUntrustedCertificates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;TLS.
        /// </summary>
        internal static string ServiceMqtt_CbMqttTls {
            get {
                return ResourceManager.GetString("ServiceMqtt_CbMqttTls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use &amp;retain flag.
        /// </summary>
        internal static string ServiceMqtt_CbUseRetainFlag {
            get {
                return ResourceManager.GetString("ServiceMqtt_CbUseRetainFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to broker ip address or hostname.
        /// </summary>
        internal static string ServiceMqtt_LblBrokerIp {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblBrokerIp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to password.
        /// </summary>
        internal static string ServiceMqtt_LblBrokerPassword {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblBrokerPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to port.
        /// </summary>
        internal static string ServiceMqtt_LblBrokerPort {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblBrokerPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to username.
        /// </summary>
        internal static string ServiceMqtt_LblBrokerUsername {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblBrokerUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to client certificate.
        /// </summary>
        internal static string ServiceMqtt_LblClientCert {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblClientCert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to client id.
        /// </summary>
        internal static string ServiceMqtt_LblClientId {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to discovery prefix.
        /// </summary>
        internal static string ServiceMqtt_LblDiscoPrefix {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblDiscoPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commands and sensors are sent through MQTT. Please provide credentials for your server. If you&apos;re using the HA addon,
        ///you can probably use the preset address..
        /// </summary>
        internal static string ServiceMqtt_LblInfo1 {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to root certificate.
        /// </summary>
        internal static string ServiceMqtt_LblRootCert {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblRootCert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to querying ...
        /// </summary>
        internal static string ServiceMqtt_LblStatus {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to status.
        /// </summary>
        internal static string ServiceMqtt_LblStatusInfo {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblStatusInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to config stored!.
        /// </summary>
        internal static string ServiceMqtt_LblStored {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblStored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (leave default if not sure).
        /// </summary>
        internal static string ServiceMqtt_LblTip1 {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (leave empty for random).
        /// </summary>
        internal static string ServiceMqtt_LblTip2 {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblTip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to tip: doubleclick these fields to browse.
        /// </summary>
        internal static string ServiceMqtt_LblTip3 {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblTip3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to configuration missing.
        /// </summary>
        internal static string ServiceMqtt_SetMqttStatus_ConfigError {
            get {
                return ResourceManager.GetString("ServiceMqtt_SetMqttStatus_ConfigError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to connected.
        /// </summary>
        internal static string ServiceMqtt_SetMqttStatus_Connected {
            get {
                return ResourceManager.GetString("ServiceMqtt_SetMqttStatus_Connected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to connecting ...
        /// </summary>
        internal static string ServiceMqtt_SetMqttStatus_Connecting {
            get {
                return ResourceManager.GetString("ServiceMqtt_SetMqttStatus_Connecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to disconnected.
        /// </summary>
        internal static string ServiceMqtt_SetMqttStatus_Disconnected {
            get {
                return ResourceManager.GetString("ServiceMqtt_SetMqttStatus_Disconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to error.
        /// </summary>
        internal static string ServiceMqtt_SetMqttStatus_Error {
            get {
                return ResourceManager.GetString("ServiceMqtt_SetMqttStatus_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to error fetching status, check logs.
        /// </summary>
        internal static string ServiceMqtt_StatusError {
            get {
                return ResourceManager.GetString("ServiceMqtt_StatusError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait while the satellite service is reinstalled ...
        /// </summary>
        internal static string ServiceReinstall_LblInfo1 {
            get {
                return ResourceManager.GetString("ServiceReinstall_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Satellite Service.
        /// </summary>
        internal static string ServiceReinstall_LblTask1 {
            get {
                return ResourceManager.GetString("ServiceReinstall_LblTask1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Satellite Service.
        /// </summary>
        internal static string ServiceReinstall_LblTask2 {
            get {
                return ResourceManager.GetString("ServiceReinstall_LblTask2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not all steps completed succesfully. Please consult the logs for more information..
        /// </summary>
        internal static string ServiceReinstall_ProcessReinstall_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceReinstall_ProcessReinstall_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent Reinstall Satellite Service.
        /// </summary>
        internal static string ServiceReinstall_Title {
            get {
                return ResourceManager.GetString("ServiceReinstall_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;add new.
        /// </summary>
        internal static string ServiceSensors_BtnAdd {
            get {
                return ResourceManager.GetString("ServiceSensors_BtnAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;modify.
        /// </summary>
        internal static string ServiceSensors_BtnModify {
            get {
                return ResourceManager.GetString("ServiceSensors_BtnModify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;remove.
        /// </summary>
        internal static string ServiceSensors_BtnRemove {
            get {
                return ResourceManager.GetString("ServiceSensors_BtnRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;send and activate sensors.
        /// </summary>
        internal static string ServiceSensors_BtnStore {
            get {
                return ResourceManager.GetString("ServiceSensors_BtnStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while saving the sensors, check the logs for more info..
        /// </summary>
        internal static string ServiceSensors_BtnStore_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceSensors_BtnStore_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to storing and registering, please wait .. .
        /// </summary>
        internal static string ServiceSensors_BtnStore_Storing {
            get {
                return ResourceManager.GetString("ServiceSensors_BtnStore_Storing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to name.
        /// </summary>
        internal static string ServiceSensors_ClmName {
            get {
                return ResourceManager.GetString("ServiceSensors_ClmName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to type.
        /// </summary>
        internal static string ServiceSensors_ClmType {
            get {
                return ResourceManager.GetString("ServiceSensors_ClmType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to refresh.
        /// </summary>
        internal static string ServiceSensors_LblRefresh {
            get {
                return ResourceManager.GetString("ServiceSensors_LblRefresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to sensors stored!.
        /// </summary>
        internal static string ServiceSensors_LblStored {
            get {
                return ResourceManager.GetString("ServiceSensors_LblStored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Satellite Service.
        /// </summary>
        internal static string ServiceSetState_Disabled {
            get {
                return ResourceManager.GetString("ServiceSetState_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Satellite Service.
        /// </summary>
        internal static string ServiceSetState_Enabled {
            get {
                return ResourceManager.GetString("ServiceSetState_Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait while the satellite service is configured ...
        /// </summary>
        internal static string ServiceSetState_LblInfo1 {
            get {
                return ResourceManager.GetString("ServiceSetState_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Satellite Service.
        /// </summary>
        internal static string ServiceSetState_LblTask1 {
            get {
                return ResourceManager.GetString("ServiceSetState_LblTask1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something went wrong while processing the desired service state.
        ///
        ///Please consult the logs for more information..
        /// </summary>
        internal static string ServiceSetState_ProcessState_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceSetState_ProcessState_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Satellite Service.
        /// </summary>
        internal static string ServiceSetState_Started {
            get {
                return ResourceManager.GetString("ServiceSetState_Started", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop Satellite Service.
        /// </summary>
        internal static string ServiceSetState_Stopped {
            get {
                return ResourceManager.GetString("ServiceSetState_Stopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent Configure Satellite Service.
        /// </summary>
        internal static string ServiceSetState_Title {
            get {
                return ResourceManager.GetString("ServiceSetState_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error loading settings:
        ///
        ///{0}.
        /// </summary>
        internal static string SettingsManager_LoadAppSettings_MessageBox1 {
            get {
                return ResourceManager.GetString("SettingsManager_LoadAppSettings_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error storing settings:
        ///
        ///{0}.
        /// </summary>
        internal static string SettingsManager_StoreAppSettings_MessageBox1 {
            get {
                return ResourceManager.GetString("SettingsManager_StoreAppSettings_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error storing initial settings:
        ///
        ///{0}.
        /// </summary>
        internal static string SettingsManager_StoreInitialSettings_MessageBox1 {
            get {
                return ResourceManager.GetString("SettingsManager_StoreInitialSettings_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error loading commands:
        ///
        ///{0}.
        /// </summary>
        internal static string StoredCommands_Load_MessageBox1 {
            get {
                return ResourceManager.GetString("StoredCommands_Load_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error storing commands:
        ///
        ///{0}.
        /// </summary>
        internal static string StoredCommands_Store_MessageBox1 {
            get {
                return ResourceManager.GetString("StoredCommands_Store_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error loading quick actions:
        ///
        ///{0}.
        /// </summary>
        internal static string StoredQuickActions_Load_MessageBox1 {
            get {
                return ResourceManager.GetString("StoredQuickActions_Load_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error storing quick actions:
        ///
        ///{0}.
        /// </summary>
        internal static string StoredQuickActions_Store_MessageBox1 {
            get {
                return ResourceManager.GetString("StoredQuickActions_Store_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error loading sensors:
        ///
        ///{0}.
        /// </summary>
        internal static string StoredSensors_Load_MessageBox1 {
            get {
                return ResourceManager.GetString("StoredSensors_Load_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error storing sensors:
        ///
        ///{0}.
        /// </summary>
        internal static string StoredSensors_Store_MessageBox1 {
            get {
                return ResourceManager.GetString("StoredSensors_Store_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ApplicationStarted.
        /// </summary>
        internal static string SystemStateEvent_ApplicationStarted {
            get {
                return ResourceManager.GetString("SystemStateEvent_ApplicationStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ConsoleConnect.
        /// </summary>
        internal static string SystemStateEvent_ConsoleConnect {
            get {
                return ResourceManager.GetString("SystemStateEvent_ConsoleConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ConsoleDisconnect.
        /// </summary>
        internal static string SystemStateEvent_ConsoleDisconnect {
            get {
                return ResourceManager.GetString("SystemStateEvent_ConsoleDisconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logoff.
        /// </summary>
        internal static string SystemStateEvent_Logoff {
            get {
                return ResourceManager.GetString("SystemStateEvent_Logoff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RemoteConnect.
        /// </summary>
        internal static string SystemStateEvent_RemoteConnect {
            get {
                return ResourceManager.GetString("SystemStateEvent_RemoteConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RemoteDisconnect.
        /// </summary>
        internal static string SystemStateEvent_RemoteDisconnect {
            get {
                return ResourceManager.GetString("SystemStateEvent_RemoteDisconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resume.
        /// </summary>
        internal static string SystemStateEvent_Resume {
            get {
                return ResourceManager.GetString("SystemStateEvent_Resume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SessionLock.
        /// </summary>
        internal static string SystemStateEvent_SessionLock {
            get {
                return ResourceManager.GetString("SystemStateEvent_SessionLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SessionLogoff.
        /// </summary>
        internal static string SystemStateEvent_SessionLogoff {
            get {
                return ResourceManager.GetString("SystemStateEvent_SessionLogoff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SessionLogon.
        /// </summary>
        internal static string SystemStateEvent_SessionLogon {
            get {
                return ResourceManager.GetString("SystemStateEvent_SessionLogon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SessionRemoteControl.
        /// </summary>
        internal static string SystemStateEvent_SessionRemoteControl {
            get {
                return ResourceManager.GetString("SystemStateEvent_SessionRemoteControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SessionUnlock.
        /// </summary>
        internal static string SystemStateEvent_SessionUnlock {
            get {
                return ResourceManager.GetString("SystemStateEvent_SessionUnlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suspend.
        /// </summary>
        internal static string SystemStateEvent_Suspend {
            get {
                return ResourceManager.GetString("SystemStateEvent_Suspend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SystemShutdown.
        /// </summary>
        internal static string SystemStateEvent_SystemShutdown {
            get {
                return ResourceManager.GetString("SystemStateEvent_SystemShutdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to prepare downloading the update, check the logs for more info.
        ///
        ///The release page will now open instead..
        /// </summary>
        internal static string UpdateManager_DownloadAndExecuteUpdate_MessageBox1 {
            get {
                return ResourceManager.GetString("UpdateManager_DownloadAndExecuteUpdate_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to download the update, check the logs for more info.
        ///
        ///The release page will now open instead..
        /// </summary>
        internal static string UpdateManager_DownloadAndExecuteUpdate_MessageBox2 {
            get {
                return ResourceManager.GetString("UpdateManager_DownloadAndExecuteUpdate_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The downloaded file FAILED the certificate check.
        ///
        ///This could be a technical error, but also a tampered file!
        ///
        ///Please check the logs, and post a ticket with the findings..
        /// </summary>
        internal static string UpdateManager_DownloadAndExecuteUpdate_MessageBox3 {
            get {
                return ResourceManager.GetString("UpdateManager_DownloadAndExecuteUpdate_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to launch the installer (did you approve the UAC prompt?), check the logs for more info.
        ///
        ///The release page will now open instead..
        /// </summary>
        internal static string UpdateManager_DownloadAndExecuteUpdate_MessageBox4 {
            get {
                return ResourceManager.GetString("UpdateManager_DownloadAndExecuteUpdate_MessageBox4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to error fetching info, check the logs.
        /// </summary>
        internal static string UpdateManager_GetLatestVersionInfo_Error {
            get {
                return ResourceManager.GetString("UpdateManager_GetLatestVersionInfo_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to one sec, fetching info ...
        /// </summary>
        internal static string UpdatePending_BtnDownload {
            get {
                return ResourceManager.GetString("UpdatePending_BtnDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to processing ...
        /// </summary>
        internal static string UpdatePending_BtnDownload_Processing {
            get {
                return ResourceManager.GetString("UpdatePending_BtnDownload_Processing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;ignore this update.
        /// </summary>
        internal static string UpdatePending_BtnIgnore {
            get {
                return ResourceManager.GetString("UpdatePending_BtnIgnore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to install BETA release.
        /// </summary>
        internal static string UpdatePending_InstallBetaRelease {
            get {
                return ResourceManager.GetString("UpdatePending_InstallBetaRelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to install update.
        /// </summary>
        internal static string UpdatePending_InstallUpdate {
            get {
                return ResourceManager.GetString("UpdatePending_InstallUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Release notes.
        /// </summary>
        internal static string UpdatePending_LblInfo1 {
            get {
                return ResourceManager.GetString("UpdatePending_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There&apos;s a new release available:.
        /// </summary>
        internal static string UpdatePending_LblNewReleaseInfo {
            get {
                return ResourceManager.GetString("UpdatePending_LblNewReleaseInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to release page.
        /// </summary>
        internal static string UpdatePending_LblRelease {
            get {
                return ResourceManager.GetString("UpdatePending_LblRelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to &amp;download and launch the installer?.
        /// </summary>
        internal static string UpdatePending_LblUpdateQuestion_Download {
            get {
                return ResourceManager.GetString("UpdatePending_LblUpdateQuestion_Download", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to &amp;navigate to the release page?.
        /// </summary>
        internal static string UpdatePending_LblUpdateQuestion_Navigate {
            get {
                return ResourceManager.GetString("UpdatePending_LblUpdateQuestion_Navigate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hold on, processing your request ...
        /// </summary>
        internal static string UpdatePending_LblUpdateQuestion_Processing {
            get {
                return ResourceManager.GetString("UpdatePending_LblUpdateQuestion_Processing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There&apos;s a new BETA release available:.
        /// </summary>
        internal static string UpdatePending_NewBetaRelease {
            get {
                return ResourceManager.GetString("UpdatePending_NewBetaRelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to open BETA release page.
        /// </summary>
        internal static string UpdatePending_OpenBetaReleasePage {
            get {
                return ResourceManager.GetString("UpdatePending_OpenBetaReleasePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to open release page.
        /// </summary>
        internal static string UpdatePending_OpenReleasePage {
            get {
                return ResourceManager.GetString("UpdatePending_OpenReleasePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent Update.
        /// </summary>
        internal static string UpdatePending_Title {
            get {
                return ResourceManager.GetString("UpdatePending_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HASS.Agent BETA Update.
        /// </summary>
        internal static string UpdatePending_Title_Beta {
            get {
                return ResourceManager.GetString("UpdatePending_Title_Beta", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AcceptsNotifications.
        /// </summary>
        internal static string UserNotificationState_AcceptsNotifications {
            get {
                return ResourceManager.GetString("UserNotificationState_AcceptsNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Busy.
        /// </summary>
        internal static string UserNotificationState_Busy {
            get {
                return ResourceManager.GetString("UserNotificationState_Busy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NotPresent.
        /// </summary>
        internal static string UserNotificationState_NotPresent {
            get {
                return ResourceManager.GetString("UserNotificationState_NotPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PresentationMode.
        /// </summary>
        internal static string UserNotificationState_PresentationMode {
            get {
                return ResourceManager.GetString("UserNotificationState_PresentationMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to QuietTime.
        /// </summary>
        internal static string UserNotificationState_QuietTime {
            get {
                return ResourceManager.GetString("UserNotificationState_QuietTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RunningDirect3dFullScreen.
        /// </summary>
        internal static string UserNotificationState_RunningDirect3dFullScreen {
            get {
                return ResourceManager.GetString("UserNotificationState_RunningDirect3dFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RunningWindowsStoreApp.
        /// </summary>
        internal static string UserNotificationState_RunningWindowsStoreApp {
            get {
                return ResourceManager.GetString("UserNotificationState_RunningWindowsStoreApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WebView.
        /// </summary>
        internal static string WebView_Title {
            get {
                return ResourceManager.GetString("WebView_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;save.
        /// </summary>
        internal static string WebViewCommandConfig_BtnSave {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_BtnSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;always show centered in screen.
        /// </summary>
        internal static string WebViewCommandConfig_CbCenterScreen {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_CbCenterScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to show the window&apos;s &amp;title bar.
        /// </summary>
        internal static string WebViewCommandConfig_CbShowTitleBar {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_CbShowTitleBar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to set window as always on &amp;top.
        /// </summary>
        internal static string WebViewCommandConfig_CbTopMost {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_CbTopMost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drag and resize this window to set the size and location of your webview command..
        /// </summary>
        internal static string WebViewCommandConfig_LblInfo1 {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to location.
        /// </summary>
        internal static string WebViewCommandConfig_LblLocation {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_LblLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to size.
        /// </summary>
        internal static string WebViewCommandConfig_LblSize {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_LblSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to tip: press &apos;esc&apos; to close a webview.
        /// </summary>
        internal static string WebViewCommandConfig_LblTip1 {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;URL.
        /// </summary>
        internal static string WebViewCommandConfig_LblUrl {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_LblUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load the stored command settings, resetting to default..
        /// </summary>
        internal static string WebViewCommandConfig_SetStoredVariables_MessageBox1 {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_SetStoredVariables_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WebView Configuration.
        /// </summary>
        internal static string WebViewCommandConfig_Title {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_Title", resourceCulture);
            }
        }
    }
}
